;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(org-link--history read-char-history counsel-locate-history eww-prompt-history xref--read-identifier-history empty-history bookmark-history coding-system-history which-key-keymap-history counsel-unicode-char-history grep-files-history grep-regexp-history counsel-file-register sly-minibuffer-history org-agenda-search-history counsel-git-grep-history swiper-history org-read-date-history minibuffer-history buffer-name-history sly-connect-port-history sly-connect-host-history command-history magit-git-command-history shell-command-history org-tags-history org-capture--prompt-history ivy-history counsel-describe-symbol-history read-expression-history face-name-history counsel-M-x-history extended-command-history evil-ex-history file-name-history))
(setq counsel-locate-history '(#("cs" 0 2 (ivy-index 0))))
(setq eww-prompt-history '("baidu.com" "ftp协议编写"))
(setq grep-regexp-history '("cs"))
(setq org-agenda-search-history '("gentoo" "ebuild" "overlay" "org-babel" "apue" "linux " "virtualbox" "org" "linux" "emacs"))
(setq counsel-git-grep-history '(#("server" 0 6 (ivy-index 0)) #("ad" 0 2 (ivy-index 0))))
(setq swiper-history '(#("evil" 0 4 (ivy-index 0)) #("Monaco" 0 6 (ivy-index 2)) #("ui" 0 2 (ivy-index 4)) "link" #("ele" 0 3 (ivy-index 1)) #("all-the" 0 7 (ivy-index 0)) #("hook" 0 4 (ivy-index 0)) #("ivy-rich" 0 8 (ivy-index 0)) #("ivy" 0 3 (ivy-index 6)) #("addr" 0 4 (ivy-index 3)) "gentoo" #("gentoo" 0 6 (ivy-index 0)) #("doom-modeline" 0 13 (ivy-index 0)) #("doom-mode" 0 9 (ivy-index 0)) #("yas" 0 3 (ivy-index 1)) #("define" 0 6 (ivy-index 1)) #("save" 0 4 (ivy-index 0)) #("for" 0 3 (ivy-index 0)) "coun" #("if" 0 2 (ivy-index 0)) "and"))
(setq org-read-date-history '("+2    " "   +4    " "o    " "   "))
(setq minibuffer-history '("https://manateelazycat.github.io/feed.xml" "google.com" "cs" "baidu.com" "conky显示todo-list" "test" "cs" "test" "FTP服务编写" "ebuild使用" "org config" "https://github.com/abcdlsj/.emacs.d/blob/master/core/init-org.el" "org config" "ox-hugo 搭建  blog" "ox-hugo blog" "test" "test blog" "test" "cs" "3" "PRIORITY" "cs" "test" "hugo-test" "hugo-tes" "ox-hugo blog" "hugo-test" "test-hugo" "28" "workspace" "org-capture" "cpp" "my cpp" "my templates" "my templates!!!" "cs" "test" "/blog/%y/%m/%d/test-author" "test author" "test11.org" "blog" "CSAPP3" "CSAPP" "CSAPP,OS" "/blog/%y/%m/%d/csapp3" "CSAPP3" "CSAPP3.org" "blog" "happy" "abcdlsj" "10    " "link" "https://archives.loomcom.com/genera/genera-install.html" " http://www.reddit.com/r/emacs/.rss
" "emacs" "https://viewsourcecode.org/snaptoken/kilo/02.enteringRawMode.html"))
(setq buffer-name-history '(#("vterm" 0 5 (ivy-index 0)) "boo"))
(setq sly-connect-port-history '("4005"))
(setq sly-connect-host-history '("localhost"))
(setq command-history '((elfeed) (elfeed) (evil-find-char nil 102) (eaf-open-rss-reader) (evil-forward-WORD-begin nil) (eaf-open-rss-reader) (eaf-open-rss-reader) (eaf-open-browser "google.com") (eaf-search-it) (evil-find-char nil 102) (dired-create-directory "/home/abcdlsj/Dropbox/workspace/CPP") (eaf-describe-bindings) (eaf-open "/home/abcdlsj/D/book/C++ Primer第五版中文版.pdf") (eaf-open-browser "baidu.com") (eaf-open-camera) (run-python "python -i" nil t) (dired-create-directory "/home/abcdlsj/Dropbox/workspace/Python/pyqt") (dired-find-file) (dired-create-directory "/home/abcdlsj/Dropbox/workspace/Python") (eaf-open-camera) (eaf-open-camera) (evil-yank 340 475 'line nil nil) (eaf-open-browser "baidu.com") (evil-yank 340 475 'line nil nil) (evil-yank 340 475 'line nil nil) (eaf-open-browser "baidu.com") (eaf-open-browser "baidu.com") (eaf-open-browser "baidu.com") (evil-delete 238 239 'line nil nil) (evil-delete 239 240 'line nil nil) (evil-delete 221 222 'line nil nil) (evil-delete 221 222 'line nil nil) (evil-delete 2888 2889 'line nil nil) (evil-delete 2900 2901 'line nil nil) (evil-delete 2926 2927 'line nil nil) (evil-delete 2999 3000 'line nil nil) (evil-delete 3052 3053 'line nil nil) (evil-delete 3071 3072 'line nil nil) (evil-delete 3086 3087 'line nil nil) (evil-delete 3104 3105 'line nil nil) (evil-delete 157 158 'line nil nil) (evil-delete 158 172 'line nil nil) (evil-find-char nil 102) (evil-delete 147 148 'line nil nil) (evil-delete 147 159 'line nil nil) (evil-delete 292 304 'line nil nil) (evil-delete 208 209 'line nil nil) (evil-delete 286 289 'line nil nil) (evil-delete 162 165 'line nil nil) (evil-delete 140 144 'line nil nil) (evil-delete 157 161 'line nil nil) (evil-delete 199 203 'line nil nil) (evil-delete 199 200 'line nil nil) (evil-delete 151 155 'line nil nil) (evil-delete 148 152 'line nil nil) (evil-delete 166 171 'line nil nil) (evil-delete 278 283 'line nil nil) (evil-yank 222 234 'line nil nil) (evil-yank 186 198 'line nil nil) (evil-delete 222 223 'line nil nil) (evil-delete 223 224 'line nil nil) (evil-delete 194 195 'line nil nil) (evil-yank 197 209 'line nil nil) (evil-delete 302 316 'line nil nil) (evil-delete 315 327 'line nil nil) (evil-delete 69 70 'line nil nil) (evil-delete 56 57 'line nil nil) (evil-delete 3447 3460 'line nil nil) (evil-delete 3447 3448 'line nil nil) (evil-delete 3448 3461 'line nil nil) (evil-find-char nil 102) (evil-delete 69 70 'line nil nil) (evil-delete 374 375 'line nil nil) (evil-delete 388 389 'line nil nil) (evil-delete 1146 1147 'line nil nil) (evil-delete 1868 1879 'line nil nil) (evil-delete 1215 1226 'line nil nil) (evil-use-register 58) (evil-delete 1205 1205 'line nil nil) (evil-delete 1213 1213 'line nil nil) (evil-delete 1213 1213 'line nil nil) (evil-delete 3274 3275 'line nil nil) (evil-find-char nil 102) (evil-find-char nil 102) (evil-delete 661 662 'line nil nil) (evil-delete 662 676 'line nil nil) (evil-delete 662 663 'line nil nil) (evil-delete 645 646 'line nil nil) (evil-delete 2423 2424 'line nil nil) (evil-delete 2119 2120 'line nil nil) (evil-delete 2139 2140 'line nil nil) (evil-delete 2210 2211 'line nil nil) (evil-delete 2263 2264 'line nil nil) (evil-delete 2292 2293 'line nil nil) (evil-delete 2329 2330 'line nil nil) (evil-delete 2347 2348 'line nil nil) (evil-delete 2408 2409 'line nil nil) (evil-delete 471 482 'line nil nil) (evil-delete 462 462 'line nil nil) (evil-change 462 474 'line nil nil) (evil-delete 462 462 'line nil nil) (evil-delete 1529 1529 'line nil nil) (evil-delete 1903 1904 'line nil nil) (evil-delete 1 2 'line nil nil) (evil-change 1 2 'line nil nil) (evil-delete 287 288 'line nil nil) (evil-delete 4239 4240 'line nil nil) (evil-delete 257 258 'line nil nil) (evil-delete 257 258 'line nil nil) (evil-delete 1 18 'line nil nil) (evil-delete 1 2 'line nil nil) (evil-delete 832 833 'line nil nil) (evil-delete 2761 2762 'line nil nil) (evil-delete 1833 1834 'line nil nil) (evil-find-char nil 102) (evil-find-char nil 32) (evil-find-char nil 102) (evil-delete 1 22 'line nil nil) (evil-delete 403 404 'line nil nil) (evil-delete 404 405 'line nil nil) (evil-delete 404 417 'line nil nil) (evil-delete 293 294 'line nil nil) (evil-delete 142 169 'line nil nil) (evil-delete 70 97 'line nil nil) (evil-delete 321 322 'line nil nil) (evil-delete 1 22 'line nil nil) (evil-delete 430 511 'line nil nil) (evil-delete 97 117 'line nil nil) (org-insert-link nil) (evil-delete 324 325 'line nil nil) (evil-delete 339 351 'line nil nil) (evil-delete 363 375 'line nil nil) (evil-delete 97 100 'line nil nil) (evil-delete 178 178 'line nil nil) (evil-delete 178 293 'line nil nil) (evil-delete 794 813 'line nil nil) (evil-delete 729 742 'line nil nil) (evil-delete 439 442 'line nil nil) (evil-delete 98 99 'line nil nil) (evil-delete 98 99 'line nil nil) (org-hugo-export-to-md) (org-hugo-export-to-md) (org-hugo-export-to-md) (org-edit-special nil) (evil-record-macro 97) (evil-goto-mark 27) (evil-delete 1139 1140 'line nil nil) (evil-delete 175 175 'line nil nil) (org-hugo-export-to-md) (evil-use-register 58) (evil-goto-mark 27) (org-hugo-export-to-md) (cnfonts-insert-fonts-configure) (cnfonts-edit-profile) (cnfonts-edit-profile) (cnfonts-edit-profile) (cnfonts-edit-profile) (cnfonts-edit-profile) (cnfonts-insert-fonts-configure) (cnfonts-insert-fonts-configure) (evil-record-macro 113) (evil-indent 921 982) (evil-indent 294 349) (cnfonts-edit-profile) (cnfonts-edit-profile) (cnfonts-increase-fontsize) (cnfonts-increase-fontsize) (cnfonts-decrease-fontsize) (cnfonts-decrease-fontsize) (cnfonts-decrease-fontsize) (cnfonts-increase-fontsize) (evil-delete 1446 1474 'line nil nil) (evil-indent 12675 12694) (evil-indent 9995 10002) (evil-indent 9995 10002) (evil-indent 9995 10002) (evil-indent 9995 10002) (evil-delete 1702 1703 'line nil nil) (evil-delete 1702 1703 'line nil nil) (org-table-align) (evil-delete 3109 3214 'line nil nil) (evil-find-char nil 102) (evil-delete 3286 3290 'line nil nil) (evil-change 3286 3315 'inclusive nil nil) (org-version nil t t) (evil-yank 1755 1781 'line nil nil) (evil-delete 1702 1724 'line nil nil) (evil-delete 1702 1703 'line nil nil) (evil-delete 1703 1704 'line nil nil) (evil-delete 3109 3214 'line nil nil) (evil-goto-mark-line 58) (customize-changed-options "") (evil-use-register 58) (org-table-align) (evil-delete 600 631 'line nil nil) (evil-delete 1 1 'line nil nil) (evil-delete 1 31 'line nil nil) (evil-delete 1 17 'line nil nil) (evil-delete 48 48 'line nil nil) (org-insert-drawer nil) (evil-find-char nil 102) (evil-delete 231 232 'line nil nil) (customize-changed-options "") (org-indent-mode 'toggle) (org-indent-mode 'toggle) (evil-delete 953 954 'line nil nil) (evil-delete 752 772 'line nil nil) (evil-delete 753 772 'line nil nil) (org-add-note) (evil-delete 3760 3819 'line nil nil) (evil-delete 693 694 'line nil nil) (evil-delete 580 585 'line nil nil) (evil-delete 612 617 'line nil nil) (evil-delete 1082 1083 'line nil nil) (evil-delete 1005 1006 'line nil nil) (evil-delete 1005 1019 'line nil nil) (org-indent-mode 'toggle) (org-indent-mode 'toggle) (evil-delete 1 23 'line nil nil) (evil-delete 203 204 'line nil nil) (evil-delete 203 237 'line nil nil) (evil-delete 110 117 'line nil nil) (org-indent-mode 'toggle) (evil-delete 110 115 'line nil nil) (evil-delete 1466 1466 'line nil nil) (evil-delete 391 391 'line nil nil) (evil-delete 338 339 'line nil nil) (evil-delete 189 189 'line nil nil) (yas-insert-snippet nil) (evil-delete 1 23 'line nil nil) (evil-delete 2020 2021 'line nil nil) (evil-delete 1880 1881 'line nil nil) (evil-delete 518 519 'line nil nil) (evil-delete 518 521 'line nil nil) (org-indent-mode 'toggle) (evil-delete 89 90 'line nil nil) (evil-delete 519 520 'line nil nil) (evil-delete 519 562 'line nil nil) (evil-delete 89 137 'line nil nil) (org-columns nil) (evil-delete 188 200 'line nil nil) (evil-yank 189 205 'line nil nil) (evil-delete 189 190 'line nil nil) (evil-delete 1 23 'line nil nil) (evil-delete 2849 2850 'line nil nil) (evil-delete 1 35 'line nil nil) (evil-find-char nil 102) (evil-delete 3270 3271 'line nil nil) (evil-delete 3271 3281 'line nil nil) (evil-delete 3271 3272 'line nil nil) (evil-delete 3271 3278 'line nil nil) (awesome-pair-wrap-double-quote) (evil-delete 3271 3278 'line nil nil) (evil-delete 3271 3289 'line nil nil) (evil-delete 3270 3271 'line nil nil) (evil-delete 3271 3272 'line nil nil) (evil-delete 3271 3295 'line nil nil) (evil-delete 3270 3280 'line nil nil) (evil-delete 3271 3275 'line nil nil) (evil-delete 3271 3272 'line nil nil) (evil-delete 3271 3293 'line nil nil) (describe-key '(("" . [11]))) (describe-key '(("" . [7]))) (evil-delete 3271 3276 'line nil nil) (evil-delete 3271 3274 'line nil nil) (evil-use-register 34) (evil-delete 1017 1018 'line nil nil) (evil-delete 690 691 'line nil nil) (evil-delete 653 662 'line nil nil) (evil-delete 95 95 'line nil nil) (evil-delete 95 96 'line nil nil) (counsel-ag) (evil-delete 2858 2859 'line nil nil) (indent-region (region-beginning) (region-end) nil) (indent-region (region-beginning) (region-end) nil) (indent-region (region-beginning) (region-end) nil) (evil-delete 95 95 'line nil nil) (evil-delete 144 144 'line nil nil) (evil-delete 145 148 'line nil nil) (evil-delete 22 93 'line nil nil) (yas-load-snippet-buffer-and-close 'org-mode nil) (yas-new-snippet nil) (evil-delete 22 33 'line nil nil) (evil-delete 1 26 'line nil nil) (evil-delete 175 176 'line nil nil) (evil-delete 175 176 'line nil nil) (evil-delete 145 169 'line nil nil) (evil-delete 1 53 'line nil nil) (evil-delete 241 242 'line nil nil) (evil-delete 241 242 'line nil nil) (evil-delete 184 185 'line nil nil) (evil-delete 1 37 'line nil nil) (evil-delete 1 2 'line nil nil) (yas-load-snippet-buffer-and-close 'org-mode nil) (yas-new-snippet nil) (evil-delete 67 81 'line nil nil) (evil-delete 104 122 'line nil nil) (evil-find-char nil 114) (evil-delete 5702 5703 'line nil nil) (evil-delete 2972 2973 'line nil nil) (evil-delete 74 79 'line nil nil) (evil-delete 1316 1317 'line nil nil) (evil-delete 688 689 'line nil nil) (evil-delete 419 439 'line nil nil) (evil-delete 505 506 'line nil nil) (evil-delete 1236 1240 'line nil nil) (evil-delete 435 436 'line nil nil) (evil-delete 419 420 'line nil nil) (evil-delete 403 404 'line nil nil) (evil-delete 364 365 'line nil nil) (evil-delete 1703 1704 'line nil nil) (evil-delete 23 24 'line nil nil) (evil-set-marker 121) (yas-insert-snippet nil) (evil-delete 24 90 'line nil nil) (yas-insert-snippet nil) (electric-pair-mode 'toggle) (evil-delete 24 39 'line nil nil) (evil-delete 23 25 'line nil nil) (evil-delete 23 23 'line nil nil) (evil-delete 24 33 'line nil nil) (evil-delete 24 24 'line nil nil) (evil-delete 1 8 'line nil nil) (evil-delete 8 9 'line nil nil) (yas-insert-snippet nil) (evil-delete 106 152 'line nil nil) (evil-delete 152 208 'line nil nil) (evil-delete 208 311 'line nil nil) (yas-insert-snippet nil) (yas-insert-snippet nil) (evil-delete 653 654 'line nil nil) (evil-delete 611 612 'line nil nil) (evil-delete 559 560 'line nil nil) (evil-delete 551 552 'line nil nil) (evil-delete 551 559 'line nil nil) (evil-delete 1024 1025 'line nil nil) (evil-delete 1044 1045 'line nil nil) (evil-delete 1061 1062 'line nil nil) (evil-delete 1100 1101 'line nil nil) (evil-delete 1142 1143 'line nil nil) (evil-delete 1164 1165 'line nil nil) (evil-delete 1207 1208 'line nil nil) (evil-delete 1222 1223 'line nil nil) (evil-delete 1292 1293 'line nil nil) (evil-delete 1362 1363 'line nil nil) (evil-delete 1444 1445 'line nil nil) (evil-delete 1363 1445 'line nil nil) (evil-delete 1506 1507 'line nil nil) (evil-delete 1581 1582 'line nil nil) (evil-delete 1581 1582 'line nil nil) (yas-insert-snippet nil) (yas-insert-snippet nil) (yas-insert-snippet nil) (evil-delete 3342 3343 'line nil nil) (evil-delete 3283 3284 'line nil nil) (evil-delete 2341 2346 'line nil nil) (evil-delete 1854 1855 'line nil nil) (evil-delete 1900 1901 'line nil nil) (evil-delete 12756 12762 'line nil nil) (evil-delete 1600 1601 'line nil nil) (evil-delete 2053 2054 'line nil nil) (evil-delete 2072 2073 'line nil nil) (evil-delete 1304 1305 'line nil nil) (evil-delete 1354 1355 'line nil nil) (evil-find-char nil 116) (eww "baidu.com" 1) (eww-search-words) (eww "ftp协议编写" 1) (evil-delete 1770 1774 'line nil nil) (evil-yank 846 846 'exclusive nil nil) (evil-delete 144 144 'line nil nil) (evil-delete 145 169 'line nil nil) (evil-record-macro 97) (evil-delete 1536 1611 'line nil nil) (evil-record-macro 113) (evil-delete 2552 2554 'line nil nil) (evil-yank 623 623 'exclusive nil nil) (evil-mode 'toggle) (evil-find-char nil 102) (evil-find-char nil 102) (evil-find-char nil 102) (evil-record-macro 58) (evil-delete 412 415 'inclusive nil nil) (ivy-posframe-swiper-avy) (xref-find-references "QUEUE") (xref-find-references #("return" 0 6 (identifier-at-point t fontified t face font-lock-keyword-face))) (customize-changed-options "") (evil-delete 166 256 'line nil nil) (evil-delete 166 258 'line nil nil) (evil-delete 580 594 'line nil nil) (lsp-ui-sideline-mode 'toggle) (lsp-ui-sideline-mode 'toggle) (lsp-ui-peek-find-definitions) (eval-buffer) (lsp-ui-doc-show) (lsp-ui-doc-mode 'toggle) (lsp-ui-peek-find-definitions) (xref-find-definitions-other-window "enable-theme") (xref-find-definitions "lsp-ui-peek-find-definitions") (xref-find-definitions-other-window #("socket" 0 6 (fontified t identifier-at-point t))) (lsp-ui-peek-find-definitions) (eval-buffer) (eval-expression 'w nil nil 127) (evil-delete 377 378 'line nil nil) (evil-delete 567 596 'line nil nil) (evil-delete 470 482 'line nil nil) (c-mode) (ccls-tree-mode) (xref-find-definitions-other-window "") (evil-delete 567 602 'line nil nil) (lsp-ui-doc-show) (lsp-ui-doc-show) (evil-delete 579 580 'line nil nil) (evil-delete 560 561 'line nil nil) (evil-delete 252 260 'line nil nil) (evil-delete 260 269 'line nil nil) (yas-insert-snippet nil) (sudoku nil) (sudoku nil) (evil-delete 428 429 'line nil nil) (visible-mode 'toggle) (visible-mode 'toggle) (blink-cursor-mode 'toggle) (evil-find-char nil 102) (evil-delete 302 303 'line nil nil) (evil-delete 1 31 'line nil nil) (evil-delete 134 135 'line nil nil) (evil-yank 201 234 'line nil nil) (evil-delete 3148 3148 'line nil nil) (customize-changed-options "") (evil-delete 988 989 'line nil nil) (evil-delete 944 944 'line nil nil) (evil-delete 991 992 'line nil nil) (evil-delete 992 1102 'line nil nil) (recover-session) (dashboard-mode) (evil-record-macro 58) (evil-delete 1102 1102 'line nil nil) (evil-delete 1103 1103 'line nil nil) (yas-insert-snippet nil) (yas-insert-snippet nil) (evil-delete 944 944 'line nil nil) (evil-delete 944 945 'line nil nil) (evil-delete 944 944 'line nil nil) (evil-delete 945 945 'line nil nil) (evil-delete 945 946 'line nil nil) (evil-delete 945 946 'line nil nil) (yas-insert-snippet nil) (evil-delete 945 945 'line nil nil) (evil-delete 988 1021 'line nil nil) (evil-delete 988 989 'line nil nil) (evil-find-char nil 118) (evil-delete 944 945 'line nil nil) (scroll-up nil) (electric-help-help) (evil-delete 971 991 'line nil nil) (evil-delete 1 2 'line nil nil) (counsel-describe-face) (bookmark-delete "org-capture-last-stored") (evil-set-marker 109) (cl-old-struct-compat-mode 'toggle) (customize) (tab-bar-mode 'toggle) (customize-changed-options "") (customize-changed-options "28") (line-number-mode 'toggle) (line-number-mode 'toggle) (evil-delete 279 301 'line nil nil) (evil-delete 301 302 'line nil nil) (telega nil) (evil-yank 1060 1091 'line nil nil) (evil-forward-WORD-begin nil) (eval-expression 'wq nil nil 127) (eval-buffer) (execute-extended-command nil "eval-buffer" "eval-buf") (scroll-bar-mode 'toggle) (execute-extended-command nil "scroll-bar-mode" "scroll-bar-mo") (find-file "~/.emacs.d/core/init-ui.el" t) (customize-changed-options "") (evil-delete 921 921 'line nil nil) (customize-changed-options "") (evil-delete 944 944 'line nil nil) (evil-delete 944 945 'line nil nil) (evil-delete 964 981 'line nil nil) (evil-delete 1131 1152 'line nil nil) (evil-delete 841 842 'line nil nil) (evil-delete 841 842 'line nil nil) (evil-delete 989 990 'line nil nil) (evil-delete 978 979 'line nil nil) (evil-delete 989 989 'line nil nil) (evil-delete 985 985 'line nil nil) (evil-delete 986 996 'line nil nil) (evil-delete 997 997 'line nil nil) (evil-delete 984 984 'line nil nil) (evil-delete 984 984 'line nil nil) (evil-delete 989 989 'line nil nil) (evil-delete 989 989 'line nil nil) (evil-delete 989 990 'line nil nil) (evil-delete 990 1001 'line nil nil) (evil-delete 1001 1019 'line nil nil) (evil-record-macro 32) (org-open-at-point nil) (evil-delete 955 963 'line nil nil) (evil-delete 972 973 'line nil nil) (evil-yank 897 937 'line nil nil) (evil-yank 881 896 'line nil nil) (find-file "/home/abcdlsj/Dropbox/workspace/lisp/SICP/1/1.31过程作为参数.rkt" t) (evil-find-char nil 118) (evil-delete 701 702 'line nil nil) (evil-delete 644 645 'line nil nil) (evil-delete 644 668 'line nil nil) (find-file "/home/abcdlsj/Dropbox/workspace/lisp/SICP/2/2.7.scm" t) (org-fill-paragraph nil t) (org-edit-special nil) (run-geiser 'chez) (org-edit-src-code) (find-file "/home/abcdlsj/Dropbox/workspace/lisp/SICP/2/2.org" t) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-ui.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-ui.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-ui.el" t) (evil-delete 1176 1181 'line nil nil) (evil-delete 1249 1264 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (perspeen-tab-create-tab) (find-file "/home/abcdlsj/.emacs.d/core/init-cc.el" t) (perspeen-tab-next) (perspeen-tab-new-tab-internal) (find-file "/home/abcdlsj/.emacs.d/core/init-ui.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (evil-delete 1161 1176 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-ui.el" t) (perspeen-goto-last-ws) (perspeen-ws-jump) (perspeen-rename-ws "workspace") (find-file "/home/abcdlsj/.emacs.d/core/init-ui.el" t) (perspeen-goto-ws 1) (perspeen-ws-jump) (perspeen-rename-ws "org-capture") (perspeen-tab-del) (find-file "/home/abcdlsj/.emacs.d/core/init-ui.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-awesome.el" t) (perspeen-create-ws) (evil-delete 3224 3236 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-ui.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-snippet.el" t) (evil-delete 1 2 'line nil nil) (evil-delete 491 491 'line nil nil) (evil-delete 652 652 'line nil nil) (evil-delete 653 653 'line nil nil) (evil-delete 653 654 'line nil nil) (evil-delete 64 149 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/snippets/c-mode/copyright-head" t) (evil-delete 491 491 'line nil nil) (yas-load-snippet-buffer-and-close 'c-mode nil) (evil-delete 339 339 'line nil nil) (evil-delete 339 340 'line nil nil) (evil-delete 340 343 'line nil nil) (evil-delete 344 403 'line nil nil) (yas-new-snippet nil) (evil-delete 54 55 'line nil nil) (evil-change 53 54 'line nil nil) (yas-load-snippet-buffer-and-close 'emacs-lisp-mode nil) (yas-new-snippet nil) (find-file "/home/abcdlsj/.emacs.d/core/init-snippet.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-test.el" t) (evil-set-marker 99) (evil-set-marker 97) (auto-insert) (evil-yank 716 796 'line nil nil) (evil-delete 1041 1042 'line nil nil) (evil-delete 171 245 'line nil nil) (evil-delete 58 81 'line nil nil) (customize-changed-options "") (evil-delete 270 271 'line nil nil) (evil-delete 270 274 'line nil nil) (evil-delete 194 204 'line nil nil) (evil-delete 194 280 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-snippet.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (evil-delete 1 1 'line nil nil) (find-file "/home/abcdlsj/Dropbox/workspace/C/test.cpp" t) (evil-delete 1 2 'line nil nil) (auto-insert) (find-file "/home/abcdlsj/Dropbox/workspace/C/close_all_light.cpp" t) (evil-delete 20 40 'line nil nil) (find-file "/home/abcdlsj/Dropbox/workspace/C/test.c" t) (evil-delete 1 42 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/snippets/autoinsert/emacs-lisp" t) (evil-delete 146 186 'line nil nil) (evil-delete 1 2 'line nil nil) (evil-delete 864 865 'line nil nil) (evil-delete 567 641 'line nil nil) (yas-insert-snippet nil) (evil-change 1 2 'line nil nil) (evil-delete 204 205 'line nil nil) (auto-insert) (evil-delete 1 7 'line nil nil) (auto-insert) (auto-insert) (evil-delete 59 60 'line nil nil) (evil-delete 1 2 'line nil nil) (auto-insert) (find-file "/home/abcdlsj/Dropbox/workspace/wis/wis.c" t) (auto-insert) (find-file "/home/abcdlsj/.emacs.d/core/init-snippet.el" t) (evil-delete 1112 1131 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (customize-changed-options "") (find-file "/home/abcdlsj/.emacs.d/core/init-snippet.el" t) (find-file "/home/abcdlsj/.emacs.d/snippets/autoinsert/copyright" t) (evil-delete 1 1 'line nil nil) (evil-delete 73 140 'line nil nil) (yas-insert-snippet nil) (lsp-mode 'toggle) (evil-delete 134 180 'line nil nil) (evil-delete 134 135 'line nil nil) (evil-find-char nil 102) (find-file "/home/abcdlsj/.emacs.d/snippets/autoinsert/" t) (find-file "/home/abcdlsj/.emacs.d/snippets/autoinsert/test.c" t) (evil-delete 1 9 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/snippets/autoinsert/default.cpp" t) (find-file "/home/abcdlsj/.emacs.d/snippets/autoinsert/default.cpp" t) (find-file "/home/abcdlsj/.emacs.d/snippets/autoinsert/default.cpp" t) (evil-delete 1 1 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-cc.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-lsp.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-snippet.el" t) (find-file "/home/abcdlsj/.emacs.d/snippets/autoinsert/default.cpp" t) (evil-replace 1 1 'exclusive 101) (evil-replace 1 1 'exclusive 98) (yas-insert-snippet nil) (evil-delete 1 23 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/snippets/autoinsert/default.cpp" t) (find-file "/home/abcdlsj/.emacs.d/core/init-snippet.el" t) (vterm-mode) (evil-collection-vterm-toggle-send-escape) (find-file "/home/abcdlsj/.emacs.d/core/init-snippet.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-funcs.el" t) (telega nil) (evil-replace 2477 2477 'exclusive 116) (telega-chat-pin nil) (telega-root-mode) (telega-root-mode) (telega nil) (evil-find-char-to nil 101) (telega nil) (find-file "/home/abcdlsj/.emacs.d/core/init-awesome.el" t) (org-find-entry-with-id "cs") (org-fill-paragraph nil t) (op/insert-options-template "test author" "/blog/%y/%m/%d/test-author" "test" "test" "test") (op/new-post "blog" "test11.org") (find-file "/home/abcdlsj/.emacs.d/core/init-custom.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-ui.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-const.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-custom.el" t) (find-file "/home/abcdlsj/.emacs.d/init.el" t) (evil-record-macro 58) (customize-changed-options "") (find-file "/home/abcdlsj/Dropbox/workspace/lisp/SICP/2/" t) (customize-group "org-page") (find-file "/home/abcdlsj/.emacs.d/gitel/org-page/doc/quick-guide.org" t) (find-file "/home/abcdlsj/.emacs.d/gitel/org-page/op-enhance.el" t) (find-file "/home/abcdlsj/.emacs.d/gitel/org-page/op-util.el" t) (describe-key "" 1 nil) (find-file "/home/abcdlsj/.emacs.d/core/init-org.el" t) (find-file "/home/abcdlsj/.emacs.d/gitel/org-page/op-template.el" t) (op/insert-options-template "CSAPP3" "/blog/%y/%m/%d/csapp3" "CSAPP,OS" "CSAPP" "CSAPP3") (op/new-post "blog" "CSAPP3.org") (find-file "/home/abcdlsj/.emacs.d/core/init-org.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (find-file "/home/abcdlsj/GithubPro/abcdlsj.github.io/blog/CSAPP学习笔记1.org" t) (evil-delete 36 37 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-cc.el" t) (find-file "/home/abcdlsj/.emacs.d/elpa/yasnippet-snippets-20191230.1405/snippets/cc-mode/" t) (find-file "/home/abcdlsj/.emacs.d/elpa/yasnippet-snippets-20191230.1405/snippets/org-mode/author" t) (evil-delete 17 18 'line nil nil) (evil-delete 17 18 'line nil nil) (evil-delete 17 25 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/elpa/yasnippet-snippets-20191230.1405/snippets/org-mode/date" t) (find-file "/home/abcdlsj/.emacs.d/elpa/yasnippet-snippets-20191230.1405/snippets/org-mode/elisp" t) (find-file "/home/abcdlsj/.emacs.d/elpa/yasnippet-snippets-20191230.1405/snippets/org-mode/emacs-lisp" t) (evil-delete 17 27 'line nil nil) (yas-describe-tables nil) (evil-delete 17 29 'line nil nil) (yas-insert-snippet nil) (evil-delete 311 321 'line nil nil) (yas-insert-snippet nil) (find-file "/home/abcdlsj/.emacs.d/core/init-lisp.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-lsp.el" t) (evil-yank 1 87 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (yas-new-snippet nil) (yas-load-snippet-buffer-and-close 'org-mode nil) (evil-yank 252 262 'line nil nil) (evil-yank 18 50 'line nil nil) (evil-delete 1 2 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-snippet.el" t) (evil-find-char nil 102) (evil-find-char nil 32) (evil-find-char nil 102) (yas-new-snippet nil) (find-file "/home/abcdlsj/.emacs.d/core/init-keybindings.el" t) (org-store-link nil) (find-file "/home/abcdlsj/Dropbox/org/journal.org" t) (org-store-link nil) (org-babel-load-file "/home/abcdlsj/Dropbox/workspace/lisp/SICP/2/2.1.3.scm" nil) (evil-delete 159 160 'line nil nil) (evil-delete 159 165 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-lisp.el" t) (find-file "/home/abcdlsj/.emacs.d/init.el" t) (evil-delete 65 110 'line nil nil) (evil-delete 65 107 'line nil nil) (evil-delete 135 136 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-awesome.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-lisp.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-org.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (find-file "/home/abcdlsj/Dropbox/workspace/lisp/SICP/2/2.8.scm" t) (find-file "/home/abcdlsj/Dropbox/workspace/lisp/SICP/2/2.7.scm" t) (evil-delete 211 212 'line nil nil) (evil-delete 226 246 'line nil nil) (evil-delete 246 247 'line nil nil) (evil-delete 271 273 'line nil nil) (evil-delete 247 259 'line nil nil) (evil-delete 1131 1143 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-org.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-cc.el" t) (eval-buffer) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (find-file "/home/abcdlsj/Dropbox/workspace/lisp/SICP/2/2.org" t) (evil-yank 2420 2464 'line nil nil) (find-file "/home/abcdlsj/Dropbox/workspace/lisp/SICP/2/2.9.scm" t) (counsel-buffer-or-recentf) (evil-delete 218 218 'line nil nil) (evil-delete 219 219 'line nil nil) (evil-delete 219 235 'line nil nil) (evil-delete 809 810 'line nil nil) (evil-delete 810 826 'line nil nil) (run-scheme "scheme") (find-file "/home/abcdlsj/Dropbox/workspace/lisp/SICP/2/2.7.scm" t) (find-file "/home/abcdlsj/Dropbox/workspace/lisp/SICP/2/2.8.scm" t) (find-file "/home/abcdlsj/Dropbox/workspace/lisp/SICP/2/2.7.scm" t) (find-file "/home/abcdlsj/Dropbox/workspace/lisp/SICP/2/2.8.scm" t) (find-file "/home/abcdlsj/Dropbox/workspace/lisp/SICP/2/2.7.scm" t) (find-file "/home/abcdlsj/Dropbox/workspace/lisp/SICP/2/2.6.scm" t) (find-file "/home/abcdlsj/Dropbox/workspace/lisp/SICP/2/2.5.scm" t) (find-file "/home/abcdlsj/Dropbox/workspace/lisp/SICP/2/2.7.scm" t) (find-file "/home/abcdlsj/Dropbox/workspace/lisp/SICP/2/2.org" t) (sly-connect "localhost" 4005 nil t) (evil-goto-mark 127) (find-file "/home/abcdlsj/.emacs.d/core/init-const.el" t) (sly nil nil t) (snake-end-game) (snake-end-game) (evil-record-macro 10) (evil-record-macro 58) (snake) (find-file "/home/abcdlsj/.emacs.d/init.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-custom.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-edit.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-cc.el" t) (sly nil nil t) (eww-buffer-select) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el]" t) (find-file "/home/abcdlsj/.emacs.d/core/init-awesome.el" t) (sly nil nil t) (find-file "/home/abcdlsj/.emacs.d/core/init-funcs.el" t) (evil-delete 848 851 'line nil nil) (evil-delete 897 932 'line nil nil) (evil-delete 897 922 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-awesome.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (evil-delete 875 921 'line nil nil) (evil-delete 929 965 'line nil nil) (end-of-buffer nil) (find-file "/home/abcdlsj/.emacs.d/elpa/sly-20200101.1514/sly.el" t) (evil-find-char nil 102) (evil-find-char nil 102) (evil-yank 581 667 'line nil nil) (sly nil nil t) (find-file "/home/abcdlsj/.emacs.d/core/init-awesome.el" t) (sly nil nil t) (evil-delete 854 880 'line nil nil) (evil-delete 1065 1102 'line nil nil) (evil-delete 1065 1102 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-awesome.el" t) (sly nil nil t) (sly nil nil t) (find-file "/home/abcdlsj/.emacs.d/core/init-awesome.el" t) (inferior-lisp "/usr/bin/clisp --noinform") (sly nil nil t) (sly nil nil t) (evil-delete 1017 1074 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-awesome.el" t) (sly nil nil t) (sly nil nil t) (evil-delete 1442 1459 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-awesome.el" t) (sly nil nil t) (sly nil nil t) (evil-yank 569 628 'line nil nil) (sly nil nil t) (sly nil nil t) (sly nil nil t) (sly nil nil t) (find-file "/home/abcdlsj/.emacs.d/core/init-awesome.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-lisp.el" t) (evil-delete 674 696 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/init.el" t) (evil-delete 889 911 'line nil nil) (evil-delete 982 982 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/init.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-apps.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-vterm.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-custom.el" t) (customize-changed-options "") (animate-birthday-present "happy") (evil-delete 215 216 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-company.el" t) (shell-command "uname -a" nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (evil-find-char nil 102) (evil-find-char nil 102) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-ui.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (find-file "/home/abcdlsj/workspace/lisp/" t) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-ui.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (evil-delete 1376 1377 'line nil nil) (evil-delete 1527 1528 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-ui.el" t) (evil-delete 1 4 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-ui.el" t) (evil-delete 1324 1330 'line nil nil) (evil-delete 1267 1286 'line nil nil) (evil-delete 59 72 'line nil nil) (projectile-switch-open-project nil) (find-file "/home/abcdlsj/.emacs.d/core/init-apps.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-ui.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (evil-delete 21 38 'line nil nil) (find-file "/home/abcdlsj/workspace/Network/ftp/server.c" t) (evil-find-char nil 102) (find-file "/home/abcdlsj/Dropbox/org/journal.org" t) (evil-find-char nil 102) (evil-find-char nil 102) (evil-delete 11600 11624 'line nil nil) (evil-find-char-to nil 101) (gist-kill-current) (gist-list nil) (gist-kill-current) (gist-buffer nil) (find-file "/home/abcdlsj/Dropbox/org/journal.org" t) (gist-list nil) (gist-list nil) (gist-list nil) (gist-fork) (gist-list-starred) (gist-list-starred) (gist-list-starred) (gist-list nil) (find-file "/home/abcdlsj/.emacs.d/core/init-apps.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (describe-key "\355" 1 nil) (find-file "/home/abcdlsj/.emacs.d/core/init-keybindings.el" t) (evil-delete 940 955 'line nil nil) (evil-delete 940 1015 'line nil nil) (evil-delete 940 965 'line nil nil) (evil-delete 940 967 'line nil nil) (find-file "/home/abcdlsj/Dropbox/org/task.org" t) (evil-delete 4114 4142 'line nil nil) (counsel-unicode-char 1) (find-file "/home/abcdlsj/Dropbox/EmacsLispManual_Chinese_Notes_Archive" t) (find-file "/home/abcdlsj/.emacs.d/core/init-fonts.el" t) (evil-change 28 31 'line nil nil) (evil-find-char nil 114) (evil-replace 1 1 'exclusive 32) (find-file "/home/abcdlsj/.config/electron-ssr/logs/shadowsocksr-client.log" t) (find-file "/boot/grub/grub.cfg" t) (org-agenda-add-note nil) (find-file "/home/abcdlsj/Dropbox/org/journal.org" t) (find-file "/home/abcdlsj/.emacs.d/gitel/sdcv.el" t) (telega nil) (ivy-baidu-fanyi-suggest) (find-file "/home/abcdlsj/.emacs.d/core/init-company.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-apps.el" t) (find-file "/home/abcdlsj/.emacs.d/gitel/ivy_baidu_fanyi_sug.el" t) (find-file "/home/abcdlsj/.emacs.d/gitel/company-english-helper.el" t) (evil-delete 814 870 'line nil nil) (evil-delete 36 37 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/gitel/ivy_baidu_fanyi_sug.el" t) (describe-key "" 1 nil) (describe-key "" 1 nil) (describe-key "c" 1 nil) (describe-key "g" 1 nil) (describe-key "a" 1 nil) (describe-key "e" 1 nil) (evil-delete 1357 1395 'line nil nil) (describe-key "" 1 nil) (find-file "/home/abcdlsj/.emacs.d/core/init-keybindings.el" t) (evil-delete 954 975 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-lisp.el" t) (evil-delete 613 641 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/init.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-keybindings.el" t) (evil-delete 146 157 'line nil nil) (evil-mode 'toggle) (company-english-helper-search 'interactive) (evil-mode 'toggle) (company-english-helper-search 'interactive) (company-english-helper-search 'interactive) (ivy-baidu-fanyi-suggest) (ivy-baidu-fanyi-suggest) (ivy-baidu-fanyi-suggest) (ivy-baidu-fanyi-suggest) (ivy-baidu-fanyi-suggest) (ivy-baidu-fanyi-suggest) (ivy-baidu-fanyi-suggest) (find-file "/home/abcdlsj/Dropbox/org/journal.org" t) (eval-buffer) (find-file "/home/abcdlsj/.emacs.d/myel/ivy_baidu_fanyi.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (package-refresh-contents) (find-file "/home/abcdlsj/.emacs.d/myel/ivy_baidu_fanyi.el" t) (find-file "/home/abcdlsj/Downloads/lisploreguidetop00brom_lisploreguidetop00brom.epub" t) (dired-create-directory "/home/abcdlsj/Dropbox/n/Algorithms") (find-file "/home/abcdlsj/Dropbox/n/" t) (find-file "/home/abcdlsj/Dropbox/n/CSAPP/Representing_Manipulating_Information.org" t) (rename-file "/home/abcdlsj/Dropbox/n/CSAPP/Machine-Level__Representation-Of-C-Programs.org" "/home/abcdlsj/Dropbox/n/CSAPP/Machine-Level__Representation-Of-C-Programs.org" 1) (find-file "/home/abcdlsj/Dropbox/n/CSAPP/Machine-Level__Representation-Of-C-Programs.org" t) (evil-delete 145 176 'line nil nil) (evil-delete 145 146 'line nil nil) (evil-delete 178 178 'line nil nil) (evil-delete 179 185 'line nil nil) (eval-buffer) (find-file "/home/abcdlsj/.emacs.d/core/init-const.el" t) (counsel-ag) (evil-delete 584 642 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-apps.el" t) (nov-mode) (find-file "/home/abcdlsj/Downloads/lisploreguidetop00brom_lisploreguidetop00brom.epub" t) (find-file "/home/abcdlsj/Downloads/" t) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (find-file "/home/abcdlsj/Downloads/lisploreguidetop00brom_lisploreguidetop00brom.epub" t) (find-file "/home/abcdlsj/Dropbox/archive/old_blog_md/Linux 系统下v2ray客户端使用.md" t) (evil-find-char nil 32) (find-file "/home/abcdlsj/Dropbox/org/notes.org" t) (find-file "/home/abcdlsj/Dropbox/org/journal.org" t) (find-file "/home/abcdlsj/.emacs.d/core/init-fonts.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-fonts.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-fonts.el" t) (evil-delete 263 263 'line nil nil) (evil-delete 264 264 'line nil nil) (evil-delete 275 359 'line nil nil) (evil-delete 263 264 'line nil nil) (evil-delete 264 275 'line nil nil) (evil-delete 275 291 'line nil nil) (evil-delete 1115 1132 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-org.el" t) (org-insert-link nil) (describe-key "" 1 nil) (evil-delete 178 192 'line nil nil) (org-time-stamp-inactive nil) (find-file "/home/abcdlsj/Dropbox/n/Running_Open_Genera_Arch.org" t) (evil-delete 35 50 'line nil nil) (org-todo nil) (org-time-stamp nil) (find-file "/home/abcdlsj/.emacs.d/elpa/base16-theme-20191031.1607/base16-default-dark-theme.el" t) (find-file "/home/abcdlsj/.emacs.d/elpa/annalist-20190929.207/annalist.el" t) (find-file "/home/abcdlsj/.emacs.d/banner/MIT_GNU_Scheme_Logo_r.png" t) (find-file "/home/abcdlsj/.emacs.d/core/init-company.el" t) (find-file "/home/abcdlsj/.config/Thunar/accels.scm" t) (customize-changed-options "") (customize-face-other-window '(hl-line)) (evil-mode 'toggle) (find-file "/home/abcdlsj/.emacs.d/core/init-fonts.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-custom.el" t) (telega nil) (sly nil nil t) (find-file "/home/abcdlsj/.emacs.d/core/init-fonts.el" t) (evil-record-macro 32) (find-file "/home/abcdlsj/workspace/lisp/CL/ansicl.lisp" t) (sly nil nil t) (sly nil nil t) (find-file "/home/abcdlsj/.emacs.d/core/init-sly.el" t) (swiper-recenter-top-bottom nil) (evil-record-macro 32) (sly nil nil t) (evil-replace 390 391 'exclusive 40) (evil-find-char nil 111) (evil-yank 603 649 'line nil nil)))
(setq magit-git-command-history '("q" "git q" "q"))
(setq shell-command-history '("uname -a" "ls" "uname -r"))
(setq org-tags-history '(#("org,daily" 0 9 (ivy-index 0)) #(":linux:package:@learn" 0 21 (ivy-index 0)) #("linux,package" 0 13 (ivy-index 0)) #("linux:@learn:" 0 13 (ivy-index 0)) #("conky,折腾,org" 0 12 (ivy-index 0)) #("learn" 0 5 (ivy-index 0)) #("org,blog,ox-hugo,hugo" 0 21 (ivy-index 0)) #("ideas" 0 5 (ivy-index 0)) #("blog,emacs,org" 0 14 (ivy-index 0)) #("blog" 0 4 (ivy-index 0)) #("test,blog" 0 9 (ivy-index 0)) #("test" 0 4 (ivy-index 0)) #("emacs" 0 5 (ivy-index 0)) #("org" 0 3 (ivy-index 0)) #("org,blog" 0 8 (ivy-index 0)) #("lsp" 0 3 (ivy-index 0)) #("gen" 0 3 (ivy-index 0)) #("linux,fcitx" 0 11 (ivy-index 0)) #("linux" 0 5 (ivy-index 0)) #("read" 0 4 (ivy-index 0)) #("emacs,el" 0 8 (ivy-index 0)) #("python" 0 6 (ivy-index 0)) #("da" 0 2 (ivy-index 0)) #("Arch,Gentoo,emacs,fcitx,linux" 0 29 (ivy-index 0)) #("emacs,linux.Gentoo,Arch" 0 23 (ivy-index 0)) "linux,Arch" #("i3" 0 2 (ivy-index 0))))
(setq org-capture--prompt-history '(#("今天把博客迁移到了hugo，包括以前的博文也一起管理了" 0 27 (ivy-index 0))))
(setq ivy-history '(#("^j" 0 2 (ivy-index 0)) #("blog" 0 4 (ivy-index 0)) #("mor" 0 3 (ivy-index 0)) #("blo" 0 3 (ivy-index 1)) #("^h" 0 2 (ivy-index 0)) #("init-org.el" 0 11 (ivy-index 0)) #("^hi" 0 3 (ivy-index 0)) #("^hl" 0 3 (ivy-index 0)) #("linux" 0 5 (ivy-index 1)) #("mach" 0 4 (ivy-index 0)) #("big" 0 3 (ivy-index 0)) #("^hb" 0 3 (ivy-index 0)) #("init" 0 4 (ivy-index 0)) #("init-" 0 5 (ivy-index 0)) #("all" 0 3 (ivy-index 0)) #("init-ui.el" 0 10 (ivy-index 0)) #("emacs" 0 5 (ivy-index 3)) #("emacs_" 0 6 (ivy-index 0)) #("journal.org" 0 11 (ivy-index 0)) #("emacs_o" 0 7 (ivy-index 0)) #("org-mode" 0 8 (ivy-index 0)) #("org" 0 3 (ivy-index 6)) #("^t" 0 2 (ivy-index 0)) #("quo" 0 3 (ivy-index 0)) #("s" 0 1 (ivy-index 0)) #("PRIORITY" 0 8 (ivy-index 0)) #("sc" 0 2 (ivy-index 0)) #("^" 0 1 (ivy-index 0)) #("csa" 0 3 (ivy-index 0)) #("title" 0 5 (ivy-index 0)) #("table" 0 5 (ivy-index 0)) #("ex" 0 2 (ivy-index 1)) #("ivy" 0 3 (ivy-index 0)) #("init-ivy.el" 0 11 (ivy-index 0)) #("ser" 0 3 (ivy-index 0)) #("in" 0 2 (ivy-index 0)) #("server.c" 0 8 (ivy-index 0)) #("init-lsp.el" 0 11 (ivy-index 0)) #("def" 0 3 (ivy-index 1)) #("2.or" 0 4 (ivy-index 0)) #("init-c" 0 6 (ivy-index 1)) #("2.org" 0 5 (ivy-index 0)) #("2." 0 2 (ivy-index 0)) #("2" 0 1 (ivy-index 0)) #("che" 0 3 (ivy-index 0)) #("2.7" 0 3 (ivy-index 0)) #("2.8" 0 3 (ivy-index 0)) #("chez" 0 4 (ivy-index 0)) #("wis" 0 3 (ivy-index 0)) #("lisp" 0 4 (ivy-index 0)) #("Journ" 0 5 (ivy-index 0)) #("op-" 0 3 (ivy-index 2)) #("org-page" 0 8 (ivy-index 0)) #("sni" 0 3 (ivy-index 0)) #("awe" 0 3 (ivy-index 0)) "sbcl" #("server" 0 6 (ivy-index 0)) #("se" 0 2 (ivy-index 0)) #("da" 0 2 (ivy-index 0)) #("packages.el" 0 11 (ivy-index 0)) #("r" 0 1 (ivy-index 0)) "January" #("t" 0 1 (ivy-index 1)) "/home/abcdlsj/.config/electron-ssr/logs/shadowsocksr-client.log" #("algorithm" 0 9 (ivy-index 1)) #("jou" 0 3 (ivy-index 0)) #("init-keybindings.el" 0 19 (ivy-index 0)) #("jo" 0 2 (ivy-index 0)) "/home/abcdlsj/Dropbox/org/journal.org" "*scratch*" #("Google Map" 0 10 (ivy-index 0)) #("heloo" 0 5 (ivy-index 0)) #("ep" 0 2 (ivy-index 0)) "/home/abcdlsj/Downloads/lisploreguidetop00brom_lisploreguidetop00brom.epub" "/home/abcdlsj/Dropbox/n/Running_Open_Genera_Arch.org" #("init-fonts.el" 0 13 (ivy-index 0)) "/home/abcdlsj/Dropbox/n/Running_Open_Genera_Arch.org" #("Running_Open_Genera_Arch.org" 0 28 (ivy-index 0)) #("init-sly.el" 0 11 (ivy-index 0)) #("ansiCL." 0 7 (ivy-index 0)) #("ansicl." 0 7 (ivy-index 1)) "ansicl.lisp" "clisp" "(start a new one)" "ansicl.lisp" "sbcl" "*sly-mrepl for sbcl*" #("ansiCL.org" 0 10 (ivy-index 0)) #("sly-" 0 4 (ivy-index 0)) "clisp" "*sly-mrepl for clisp*" "/home/abcdlsj/workspace/lisp/CL/ansiCL.org" "Emacs Chats - Sacha Chua - 2015-12-10 Emacs Chat: John Wiegley on maintaining Emacs and how you can help" "ob-lisp.el.gz" #("ans" 0 3 (ivy-index 0)) "init-lisp.el" "sicp" "init-lisp.el" "1.lisp" "/home/abcdlsj/.emacs.d/core/init-edit.el" "*elfeed-log*" "2.1.4.scm" #("scr" 0 3 (ivy-index 0)) #("j" 0 1 (ivy-index 0)) #("edit.el" 0 7 (ivy-index 0)) #("ed" 0 2 (ivy-index 0)) #("wis/" 0 4 (ivy-index 2)) "*scratch*" #("apps.el" 0 7 (ivy-index 0)) "init-apps.el" #("v" 0 1 (ivy-index 1)) "*dashboard*" #("memo" 0 4 (ivy-index 0)) #("music" 0 5 (ivy-index 4)) "boo" "*Compile-Log*"))
(setq counsel-describe-symbol-history '(#("^org-babel-lisp-" 0 16 (ivy-index 1)) #("^org-babel-exe" 0 14 (ivy-index 0)) #("^org-babel-lisp-eval-fn" 0 23 (ivy-index 0))))
(setq read-expression-history '("w" "wq" "q"))
(setq face-name-history '("hl-line"))
(setq counsel-M-x-history '(#("^elfeed" 0 7 (ivy-index 32)) #("^eaf-open" 0 9 (ivy-index 8)) #("^" 0 1 (ivy-index 0)) #("rss" 0 3 (ivy-index 1)) #("^eaf-open-r" 0 11 (ivy-index 0)) #("^eaf-open-br" 0 12 (ivy-index 0)) #("^eaf-" 0 5 (ivy-index 21)) #("eaf-de" 0 6 (ivy-index 0)) #("^eaf-open-browser" 0 17 (ivy-index 0)) #("^eaf-open-ca" 0 12 (ivy-index 0)) #("^run-py" 0 7 (ivy-index 0)) #("^dired-fi" 0 9 (ivy-index 0)) #("^org-insert-" 0 12 (ivy-index 13)) #("^org-hugo" 0 9 (ivy-index 1)) #("^org-edit-" 0 10 (ivy-index 0)) #("hugo" 0 4 (ivy-index 1)) #("^cnfonts-insert-font" 0 20 (ivy-index 1)) #("^cnfonts-edit-profile" 0 21 (ivy-index 0)) #("cnfonts-ed" 0 10 (ivy-index 0)) #("^cnfonts-inc" 0 12 (ivy-index 1)) #("^cnfonts-incre" 0 14 (ivy-index 1)) #("^cnfonts-decre" 0 14 (ivy-index 1)) #("^cnfonts-de" 0 11 (ivy-index 1)) #("^org-table-a" 0 12 (ivy-index 0)) #("^org-ve" 0 7 (ivy-index 0)) #("^customize" 0 10 (ivy-index 0)) #("^org-table-align" 0 16 (ivy-index 0)) #("org-link" 0 8 (ivy-index 0)) #("^org-insert-drawer" 0 18 (ivy-index 0)) #("^org-indent-mode" 0 16 (ivy-index 0)) #("^org-indent-" 0 12 (ivy-index 4)) #("^org-add" 0 8 (ivy-index 0)) #("^org-inde" 0 9 (ivy-index 5)) #("^yas-insert-snippet" 0 19 (ivy-index 0)) #("^awesome-pair-" 0 14 (ivy-index 0)) #("^counsel-ag" 0 11 (ivy-index 0)) #("^indent" 0 7 (ivy-index 5)) #("^indent-re" 0 10 (ivy-index 1)) #("^yas-new" 0 8 (ivy-index 0)) #("^yas-ne" 0 7 (ivy-index 1)) #("^electric-pair-mode" 0 19 (ivy-index 0)) #("^eww-se" 0 7 (ivy-index 0)) #("^eww" 0 4 (ivy-index 3)) #("^evil-mode" 0 10 (ivy-index 0)) #("^package-in" 0 11 (ivy-index 0)) #("^ivy-posframe-" 0 14 (ivy-index 3)) #("^xref-find-" 0 11 (ivy-index 2)) #("^lsp-ui-sideline-" 0 17 (ivy-index 2)) #("^lsp-ui-side" 0 12 (ivy-index 2)) #("lsp-ui-peek-find-" 0 17 (ivy-index 0)) #("^eval-buffer" 0 12 (ivy-index 0)) #("^lsp-ui-doc-" 0 12 (ivy-index 0)) #("^lsp-ui-doc" 0 11 (ivy-index 2)) #("^lsp-ui-pe" 0 10 (ivy-index 0)) #("^xref-find" 0 10 (ivy-index 5)) #("xref-find" 0 9 (ivy-index 0)) #("^lsp-ui-peek-" 0 13 (ivy-index 0)) #("c++-mode" 0 8 (ivy-index 8)) #("^ccls-" 0 6 (ivy-index 23)) #("xref-find-" 0 10 (ivy-index 0)) #("lsp-ui-" 0 7 (ivy-index 0)) #("^lsp-ui-" 0 8 (ivy-index 0)) #("^customize-group" 0 16 (ivy-index 1)) #("^sudoku" 0 7 (ivy-index 30)) #("visible" 0 7 (ivy-index 9)) #("^visible-mode" 0 13 (ivy-index 0)) #("^blink-c" 0 8 (ivy-index 0)) #("^recover-" 0 9 (ivy-index 0)) #("^dashboard-" 0 11 (ivy-index 6)) #("^scroll-up" 0 10 (ivy-index 1)) #("electric-" 0 9 (ivy-index 1)) #("^counsel-des" 0 12 (ivy-index 3)) #("^bookmark-delete" 0 16 (ivy-index 0)) #("^cl-" 0 4 (ivy-index 1)) #("^tab-bar-m" 0 10 (ivy-index 3)) #("^lin" 0 4 (ivy-index 1)) #("^line-number-mode" 0 17 (ivy-index 0)) #("telega" 0 6 (ivy-index 133)) #("^org-open" 0 9 (ivy-index 2)) #("^org-fill" 0 9 (ivy-index 0)) #("org-edit-" 0 9 (ivy-index 0)) #("^run-geiser" 0 11 (ivy-index 0)) #("^which-" 0 7 (ivy-index 0)) #("^perspeen-tab-" 0 14 (ivy-index 7)) #("^perspeen-" 0 10 (ivy-index 0)) #("^perspeen-ws" 0 12 (ivy-index 1)) #("perspeen-rename-ws" 0 18 (ivy-index 0)) #("^perspeen" 0 9 (ivy-index 18)) #("^perspeen-rename-ws" 0 19 (ivy-index 0)) #("perspeen-create-ws" 0 18 (ivy-index 0)) #("^auto-insert" 0 12 (ivy-index 1)) #("^auto-ins" 0 9 (ivy-index 1)) #("lsp-mode" 0 8 (ivy-index 0)) #("^vterm-" 0 7 (ivy-index 28)) #("vterm-to" 0 8 (ivy-index 0)) #("^telega" 0 7 (ivy-index 133)) #("^telega-" 0 8 (ivy-index 10)) #("^telega-root-mode" 0 17 (ivy-index 0)) #("^org-fi" 0 7 (ivy-index 3)) #("org-fi" 0 6 (ivy-index 0)) #("^op/new" 0 7 (ivy-index 0)) #("^op.new" 0 7 (ivy-index 0)) #("^yas-de" 0 7 (ivy-index 1)) #("^yas-in" 0 7 (ivy-index 0)) #("^yas-" 0 5 (ivy-index 11)) #("snipp" 0 5 (ivy-index 3)) #("snippet" 0 7 (ivy-index 3)) #("^org-s" 0 6 (ivy-index 0)) #("^org-babel-load" 0 15 (ivy-index 0)) #("counsel-buffer-or-recentf" 0 25 (ivy-index 0)) #("^run-sc" 0 7 (ivy-index 0)) #("^sly-connect" 0 12 (ivy-index 0)) #("^sly" 0 4 (ivy-index 0)) #("^snake-end-game" 0 15 (ivy-index 0)) #("^snake-e" 0 8 (ivy-index 0)) #("^snake" 0 6 (ivy-index 0)) #("^end" 0 4 (ivy-index 2)) #("^sly-quickl" 0 11 (ivy-index 1)) #("^sly-quick" 0 10 (ivy-index 1)) #("^inferior-" 0 10 (ivy-index 2)) #("sly" 0 3 (ivy-index 15)) #("^animate-birthday-present" 0 25 (ivy-index 0)) #("open-pro" 0 8 (ivy-index 0)) #("^gist-ad" 0 8 (ivy-index 0)) #("^gist-ki" 0 8 (ivy-index 0)) #("^gist-lis" 0 9 (ivy-index 7)) #("^gist-b" 0 7 (ivy-index 1)) #("^gist-list" 0 10 (ivy-index 7)) #("^gist-f" 0 7 (ivy-index 0)) #("^gist-" 0 6 (ivy-index 11)) #("unicode" 0 7 (ivy-index 0)) #("note" 0 4 (ivy-index 5)) #("^ivy-baid" 0 9 (ivy-index 0)) #("^company-english-helper-search" 0 30 (ivy-index 0)) #("^company-en" 0 11 (ivy-index 0)) #("^ivy-baidu-fanyi-suggest" 0 24 (ivy-index 0)) #("^ivy-baidu" 0 10 (ivy-index 0)) #("^ivy-ba" 0 7 (ivy-index 1)) #("package-install" 0 15 (ivy-index 0)) #("^package-refresh-contents" 0 25 (ivy-index 0)) #("^package-install" 0 16 (ivy-index 0)) #("^rename" 0 7 (ivy-index 1)) #("^nov" 0 4 (ivy-index 0)) #("^org-insert-link" 0 16 (ivy-index 1)) #("^org-time-" 0 10 (ivy-index 0)) #("^org-todo" 0 9 (ivy-index 0)) #("org-time" 0 8 (ivy-index 9)) #("customize-f" 0 11 (ivy-index 1)) #("^swiper" 0 7 (ivy-index 0)) #("^rg" 0 3 (ivy-index 0)) #("run-c" 0 5 (ivy-index 0)) #("^counsel-file-" 0 14 (ivy-index 0)) #("^delete-file" 0 12 (ivy-index 1)) #("^sly-en" 0 7 (ivy-index 0)) #("^sly-se" 0 7 (ivy-index 0)) #("podcaster" 0 9 (ivy-index 2)) #("^podcaster" 0 10 (ivy-index 2)) #("^magit-add" 0 10 (ivy-index 1)) #("^sly-list-" 0 10 (ivy-index 0)) #("^sl" 0 3 (ivy-index 0)) #("^run-racket" 0 11 (ivy-index 0)) #("^run-li" 0 7 (ivy-index 0)) #("^rename-" 0 8 (ivy-index 1)) #("^infer" 0 6 (ivy-index 2)) #("^sly-a" 0 6 (ivy-index 5)) #("^sly-qui" 0 8 (ivy-index 3)) #("^sly-qu" 0 7 (ivy-index 4)) #("^counsel-rg" 0 11 (ivy-index 0)) #("complete-s" 0 10 (ivy-index 1)) #("^mingus" 0 7 (ivy-index 43)) #("sch" 0 3 (ivy-index 2)) #("^elfeed-org" 0 11 (ivy-index 1)) #("^sly-lis" 0 8 (ivy-index 0)) #("^sly-abor" 0 9 (ivy-index 0)) #("^string" 0 7 (ivy-index 1)) #("^smar" 0 5 (ivy-index 2)) #("smartparens" 0 11 (ivy-index 7)) #("^text" 0 5 (ivy-index 1)) #("all-the-icons-ins" 0 17 (ivy-index 6)) #("image-in" 0 8 (ivy-index 0)) #("^image" 0 6 (ivy-index 1)) #("image-" 0 6 (ivy-index 1)) #("^elfeed-add" 0 11 (ivy-index 0)) #("^elfeed-" 0 8 (ivy-index 28)) #("^package-list-packages" 0 22 (ivy-index 0)) #("^counsel-re" 0 11 (ivy-index 1)) #("^telega-msg-" 0 12 (ivy-index 2)) #("telega-msg" 0 10 (ivy-index 5)) #("^telega-mode" 0 12 (ivy-index 0)) #("telega-mode" 0 11 (ivy-index 0)) #("^sdcv" 0 5 (ivy-index 0)) #("sdcv-se" 0 7 (ivy-index 0)) #("^sdcv-search-" 0 13 (ivy-index 0)) #("^sdcv-mode" 0 10 (ivy-index 0)) #("^sdcv-s" 0 7 (ivy-index 2)) #("^sdcv-" 0 6 (ivy-index 0)) #("^sdcv-check" 0 11 (ivy-index 0)) #("^sdcv-se" 0 8 (ivy-index 1)) #("^vterm-o" 0 8 (ivy-index 0)) #("^vterm" 0 6 (ivy-index 20)) #("projectile" 0 10 (ivy-index 78)) #("^project" 0 8 (ivy-index 3)) #("^all-t" 0 6 (ivy-index 4)) #("^all-the" 0 8 (ivy-index 4)) #("^all" 0 4 (ivy-index 3)) #("^sly-abo" 0 8 (ivy-index 0)) #("^sly-abort-connection" 0 21 (ivy-index 0)) #("^magit-status" 0 13 (ivy-index 0)) #("^magit-v" 0 8 (ivy-index 0)) #("elisp" 0 5 (ivy-index 0)) #("emacs-ma" 0 8 (ivy-index 0)) #("eval" 0 4 (ivy-index 6)) #("^eval" 0 5 (ivy-index 5)) #("^shell" 0 6 (ivy-index 8)) #("^eva" 0 4 (ivy-index 5)) #("^customize-face" 0 15 (ivy-index 0))))
(setq extended-command-history '("eval-buffer" "scroll-bar-mode" "ivy-mode"))
(setq evil-ex-history '(#("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("'<,'>q" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("q" 0 1 (ex-index 1)) #("2" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 833)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("ww" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("Q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("WQ" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("e" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("ww" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 12445)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("Q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("'<,'>q" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("'<,'>q" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("Q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q!" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("qq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("'<,'>q" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("'<,'>q" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 11355)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 4097)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("ww" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("ww" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 10156)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wwq" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("qw" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("\"w" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1))))
(setq file-name-history '(#("/home/abcdlsj/.emacs.d/core/init-awesome.el" 0 43 (ivy-index 0)) #("/home/abcdlsj/D/book/Emacs基础教程.pdf" 0 34 (ivy-index 7)) #("/home/abcdlsj/D/book/c++ primer.epub" 0 36 (ivy-index 20)) #("/home/abcdlsj/Dropbox/workspace/CPP" 0 35 (ivy-index 0)) #("/home/abcdlsj/Dropbox/workspace/" 0 32 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-custom.el" 0 42 (ivy-index 4)) #("/home/abcdlsj/D/book/C++ Primer第五版中文版.pdf" 0 41 (ivy-index 6)) #("/home/abcdlsj/Dropbox/workspace/Python/pyqt/test.py" 0 51 (ivy-index 0)) #("/home/abcdlsj/Dropbox/workspace/Python/pyqt" 0 43 (ivy-index 0)) #("/home/abcdlsj/Dropbox/workspace/Python" 0 38 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/gitel/emacs-application-framework/" 0 57 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/Linux系统下v2ray客户端使用.md" 0 76 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/Cmder-出现MacType-问题解决.md" 0 78 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/Hexo-Github搭建博客.md" 0 73 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/酸酸乳搭建.md" 0 63 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/python爬取大学排名并生成大学关键词词云图.md" 0 81 (ivy-index 1)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/python-jieba库分析斗破词频.md" 0 77 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/搭建v2ray.md" 0 65 (ivy-index 2)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/ubuntu系统优化-问题解决-内容丰富.md" 0 78 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/全球首富贝佐斯：这是我成功的唯一秘诀.md" 0 76 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/使用heroku免费搭建v2ray.md" 0 75 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/神级输入法RIME-安装-基本配置.md" 0 75 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/VPS-安装Aria2和WEBUI搭建离线下载神器.md" 0 83 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/一个Markdown小工具.md" 0 71 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/Linux下一个好用的百度网盘客户端.md" 0 76 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/NextCloud-私人网盘搭建.md" 0 74 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/centos-开启google-bbr加速.md" 0 79 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/Representing-Manipulating-Information.md" 0 95 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/树莓派系统安装-使用ffmpeg推流实现b站直播.md" 0 82 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/关于不蒜子计数新域名修改.md" 0 70 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/2-3月日常.md" 0 64 (ivy-index 2)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/Sklearn通用学习模式.md" 0 71 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/安装TensorFlow.md" 0 70 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/pip-not-found.md" 0 71 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/SICP环境配置.md" 0 66 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/Arch安装配置双显卡.md" 0 69 (ivy-index 4)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/gdb调试方法总结-基础.md" 0 70 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/mysql-查询语句练习.md" 0 70 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/BFS和AStar算法解决八数码问题代码.md" 0 78 (ivy-index 4)) #("/home/abcdlsj/Dropbox/n/emacs_operation.org" 0 43 (ivy-index 0)) #("/home/abcdlsj/Dropbox/n/CSAPP/Representing-Manipulating-Information.org" 0 71 (ivy-index 4)) #("/home/abcdlsj/Dropbox/n/CSAPP/Machine-Level-Representation-Of-C-Programs.org" 0 76 (ivy-index 0)) #("/home/abcdlsj/Dropbox/n/Arch安装配置双显卡.org" 0 39 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/snippets/org-mode/more" 0 45 (ivy-index 0)) #("/home/abcdlsj/Dropbox/n/linux文件夹权限设置.org" 0 40 (ivy-index 2)) #("/home/abcdlsj/Dropbox/org/notes.org" 0 35 (ivy-index 0)) #("/home/abcdlsj/Dropbox/blog/blog.org" 0 35 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-org.el" 0 39 (ivy-index 0)) #("/home/abcdlsj/Dropbox/n/ebuild.org" 0 34 (ivy-index 15)) #("/home/abcdlsj/Dropbox/n/learn_emacs_in_sc.org" 0 45 (ivy-index 1)) #("/home/abcdlsj/Dropbox/n/CSAPP/" 0 30 (ivy-index 0)) #("/home/abcdlsj/Dropbox/n/bigdata_env.org" 0 39 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/" 0 23 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-packages.el" 0 44 (ivy-index 0)) #("/home/abcdlsj/Dropbox/n/learn_emacs_in_sc.el" 0 44 (ivy-index 0)) #("/home/abcdlsj/Dropbox/n/org-page搭建blog.org" 0 42 (ivy-index 22)) #("/home/abcdlsj/Dropbox/n/2019_9-2019_10.org" 0 42 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/snippets/org-mode/hugo" 0 45 (ivy-index 0)) #("/home/abcdlsj/Dropbox/org/all-posts.org" 0 39 (ivy-index 0)) #("/home/abcdlsj/Dropbox/n/org-mode使用哲学.org" 0 40 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-const.el" 0 41 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-cc.el" 0 38 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-funcs.el" 0 41 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-ui.el" 0 38 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/elpa/cnfonts-20191214.1006/cnfonts.el" 0 60 (ivy-index 6)) #("/home/abcdlsj/.emacs.d/core/init-keybindings.el" 0 47 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-ivy.el" 0 39 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-edit.el" 0 40 (ivy-index 0)) #("/home/abcdlsj/Dropbox/org/test.org" 0 34 (ivy-index 0)) #("/home/abcdlsj/Dropbox/n/test.org" 0 32 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/init.el" 0 30 (ivy-index 1)) #("/home/abcdlsj/Dropbox/n/Linux内核设计与实现1.org" 0 41 (ivy-index 1)) #("/home/abcdlsj/Dropbox/org/journal.org" 0 37 (ivy-index 0)) #("/home/abcdlsj/Dropbox/n/Linux内核设计与实现3.org" 0 41 (ivy-index 1)) #("/home/abcdlsj/Dropbox/n/CSAPP/img/3.1.png" 0 41 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/elpa/yasnippet-snippets-20191230.1405/snippets/org-mode/description" 0 90 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/elpa/yasnippet-snippets-20191230.1405/snippets/org-mode/dot" 0 82 (ivy-index 6)) #("/home/abcdlsj/.emacs.d/elpa/yasnippet-snippets-20191230.1405/snippets/org-mode/title" 0 84 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/blog/使用org-page和org-mode搭建blog.org" 0 76 (ivy-index 6)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/blog/" 0 47 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/blog/CSAPP学习笔记1.org" 0 61 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/early-init.el" 0 36 (ivy-index 1)) #("/home/abcdlsj/.emacs.d/core/init-lsp.el" 0 39 (ivy-index 0)) #("/usr/include/KF5/" 0 17 (ivy-index 13)) #("/usr/include/arpa/telnet.h" 0 26 (ivy-index 0)) #("/usr/include/arpa/ftp.h" 0 23 (ivy-index 2)) #("/usr/include/netinet/if_ether.h" 0 31 (ivy-index 0)) #("/usr/include/netinet/ether.h" 0 28 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/elpa/lsp-ui-20200106.1152/" 0 49 (ivy-index 2)) #("/home/abcdlsj/Dropbox/workspace/Network/ftp/server.c" 0 52 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/gitel/sudoku.el" 0 38 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-company.el" 0 43 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-snippet.el" 0 43 (ivy-index 0)) #("/home/abcdlsj/Dropbox/workspace/lisp/SICP/2/2.org" 0 49 (ivy-index 0)) "~/.emacs.d/core/init-ui.el" #("/home/abcdlsj/.emacs.d/core/init-lisp.el" 0 40 (ivy-index 0)) #("/home/abcdlsj/Dropbox/workspace/lisp/SICP/1/1.31过程作为参数.rkt" 0 58 (ivy-index 0)) #("/home/abcdlsj/Dropbox/workspace/lisp/SICP/2/2.7.scm" 0 51 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/snippets/c-mode/copyright-head" 0 53 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/snippets/emacs-lisp-mode/copyright" 0 57 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-test.el" 0 40 (ivy-index 0)) #("/home/abcdlsj/Dropbox/workspace/C/test.cpp" 0 42 (ivy-index 0)) #("/home/abcdlsj/Dropbox/workspace/C/close_all_light.cpp" 0 53 (ivy-index 5)) #("/home/abcdlsj/Dropbox/workspace/C/test.c" 0 40 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/snippets/autoinsert/emacs-lisp" 0 53 (ivy-index 0)) #("/home/abcdlsj/Dropbox/workspace/wis/wis.c" 0 41 (ivy-index 1)) #("/home/abcdlsj/.emacs.d/snippets/autoinsert/copyright" 0 52 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/snippets/autoinsert/" 0 43 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/snippets/autoinsert/test.c" 0 49 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/snippets/autoinsert/default.cpp" 0 54 (ivy-index 0)) #("/home/abcdlsj/Dropbox/workspace/lisp/SICP/2/" 0 44 (ivy-index 3)) #("/home/abcdlsj/.emacs.d/gitel/org-page/doc/quick-guide.org" 0 57 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/gitel/org-page/op-enhance.el" 0 51 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/gitel/org-page/op-util.el" 0 48 (ivy-index 12)) #("/home/abcdlsj/.emacs.d/gitel/org-page/op-template.el" 0 52 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/elpa/yasnippet-snippets-20191230.1405/snippets/cc-mode/" 0 78 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/elpa/yasnippet-snippets-20191230.1405/snippets/org-mode/author" 0 85 (ivy-index 2)) #("/home/abcdlsj/.emacs.d/elpa/yasnippet-snippets-20191230.1405/snippets/org-mode/date" 0 83 (ivy-index 4)) #("/home/abcdlsj/.emacs.d/elpa/yasnippet-snippets-20191230.1405/snippets/org-mode/elisp" 0 84 (ivy-index 7)) #("/home/abcdlsj/.emacs.d/elpa/yasnippet-snippets-20191230.1405/snippets/org-mode/emacs-lisp" 0 89 (ivy-index 8)) #("/home/abcdlsj/.emacs.d/snippets/org-mode/org-babel-sicp" 0 55 (ivy-index 0)) #("/home/abcdlsj/Dropbox/workspace/lisp/SICP/2/2.1.3.scm" 0 53 (ivy-index 1)) #("/home/abcdlsj/Dropbox/workspace/lisp/SICP/2/2.8.scm" 0 51 (ivy-index 0)) #("/home/abcdlsj/Dropbox/workspace/lisp/SICP/2/2.9.scm" 0 51 (ivy-index 0)) #("/home/abcdlsj/Dropbox/workspace/lisp/SICP/2/2.6.scm" 0 51 (ivy-index 0)) #("/home/abcdlsj/Dropbox/workspace/lisp/SICP/2/2.5.scm" 0 51 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-packages.el]" 0 45 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/elpa/sly-20200101.1514/sly.el" 0 52 (ivy-index 3)) #("/home/abcdlsj/.emacs.d/core/init-apps.el" 0 40 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-vterm.el" 0 41 (ivy-index 0)) #("/home/abcdlsj/workspace/lisp/" 0 29 (ivy-index 0)) #("/home/abcdlsj/workspace/Network/ftp/server.c" 0 44 (ivy-index 0)) #("/home/abcdlsj/Dropbox/org/task.org" 0 34 (ivy-index 1)) #("/home/abcdlsj/Dropbox/EmacsLispManual_Chinese_Notes_Archive" 0 59 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-fonts.el" 0 41 (ivy-index 0)) #("/home/abcdlsj/.config/electron-ssr/logs/shadowsocksr-client.log" 0 63 (ivy-index 2)) #("/boot/grub/grub.cfg" 0 19 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/gitel/sdcv.el" 0 36 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/gitel/ivy_baidu_fanyi_sug.el" 0 51 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/gitel/company-english-helper.el" 0 54 (ivy-index 1)) #("/home/abcdlsj/.emacs.d/myel/ivy_baidu_fanyi.el" 0 46 (ivy-index 0)) #("/home/abcdlsj/Downloads/lisploreguidetop00brom_lisploreguidetop00brom.epub" 0 74 (ivy-index 0)) #("/home/abcdlsj/Dropbox/n/Algorithms" 0 34 (ivy-index 0)) #("/home/abcdlsj/Dropbox/n/" 0 24 (ivy-index 0)) #("/home/abcdlsj/Dropbox/n/CSAPP/Representing_Manipulating_Information.org" 0 71 (ivy-index 1)) #("/home/abcdlsj/Dropbox/n/CSAPP/Machine-Level__Representation-Of-C-Programs.org" 0 77 (ivy-index 0)) #("/home/abcdlsj/Downloads/" 0 24 (ivy-index 0)) #("/home/abcdlsj/Dropbox/archive/old_blog_md/Linux 系统下v2ray客户端使用.md" 0 64 (ivy-index 0)) #("/home/abcdlsj/Dropbox/n/Running_Open_Genera_Arch.org" 0 52 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/elpa/base16-theme-20191031.1607/base16-default-dark-theme.el" 0 83 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/elpa/annalist-20190929.207/annalist.el" 0 61 (ivy-index 2)) #("/home/abcdlsj/.emacs.d/banner/MIT_GNU_Scheme_Logo_r.png" 0 55 (ivy-index 0)) #("/home/abcdlsj/.config/Thunar/accels.scm" 0 39 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/custom.el" 0 32 (ivy-index 0)) #("/home/abcdlsj/workspace/lisp/CL/ansicl.lisp" 0 43 (ivy-index 1)) #("/home/abcdlsj/.emacs.d/core/init-sly.el" 0 39 (ivy-index 0)) #("/home/abcdlsj/workspace/lisp/CL/ansiCL.org" 0 42 (ivy-index 0)) #("/home/abcdlsj/workspace/lisp/CL/ansiCL.org~" 0 43 (ivy-index 3)) #("/home/abcdlsj/.emacs.d/elpa/sly-20191218.2148/sly-autoloads.el" 0 62 (ivy-index 1)) #("/home/abcdlsj/.emacs.d/elpa/sly-20191218.2148/" 0 46 (ivy-index 0)) #("/home/abcdlsj/ABC/lisp/CL/ansiCL.org" 0 36 (ivy-index 0)) #("/home/abcdlsj/ABC/lisp/CL/1.org" 0 31 (ivy-index 0)) #("/home/abcdlsj/ABC/lisp/CL/helloworld.lisp" 0 41 (ivy-index 0)) #("/home/abcdlsj/ABC/lisp/CL/1.lisp" 0 32 (ivy-index 0)) #("/home/abcdlsj/ABC/lisp/CL/fft.lisp" 0 34 (ivy-index 0)) #("/home/abcdlsj/ABC/lisp/SICP/2/2.org" 0 35 (ivy-index 0)) "/home/abcdlsj/sc" #("/home/abcdlsj/.xinitrc" 0 22 (ivy-index 0)) #("/home/abcdlsj/ABC/lisp/SICP/2/2.1.4.scm" 0 39 (ivy-index 1)) #("/home/abcdlsj/ABC/wis/wis.c" 0 27 (ivy-index 1)) #("/home/abcdlsj/.config/i3/config" 0 31 (ivy-index 0)) #("/home/abcdlsj/ABC/lisp/SICP/2/2.6.scm" 0 37 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/elpa/base16-theme-20191031.1607/" 0 55 (ivy-index 1)) #("/home/abcdlsj/C/Users/abcdlsj/Desktop/taxi/taxi.v" 0 49 (ivy-index 0)) #("/home/abcdlsj/ABC/wis/Makefile" 0 30 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/elpa/all-the-icons-ivy-20190508.1803/" 0 60 (ivy-index 1)) "~/.emacs.d/init.el" "~/.emacs.d/core/init-ivy.el" "~/.emacs.d/core/init-keybindings.el" "~/.emacs.d/core/init-packages.el" "~/.emacs.d/core/init-ivy.el" #("/home/abcdlsj/Dropbox/org/elfeed.org" 0 36 (ivy-index 0)) #("/home/abcdlsj/.elfeed/" 0 22 (ivy-index 0)) #("/home/abcdlsj/ABC/wis/compile_commands.json" 0 43 (ivy-index 4)) #("/home/abcdlsj/.cargo/registry/" 0 30 (ivy-index 0)) #("/home/abcdlsj/.cargo/env" 0 24 (ivy-index 0)) #("/home/abcdlsj/.gitconfig" 0 24 (ivy-index 1)) #("/home/abcdlsj/.config/i3blocks/memory/i3blocks.conf" 0 51 (ivy-index 3)) #("/home/abcdlsj/.config/i3blocks/disk/i3blocks.conf" 0 49 (ivy-index 0)) #("/home/abcdlsj/.config/i3blocks/disk/" 0 36 (ivy-index 0)) #("/home/abcdlsj/.config/i3blocks/memory/memory" 0 44 (ivy-index 0)) #("/home/abcdlsj/.config/i3blocks/config" 0 37 (ivy-index 0)) #("/home/abcdlsj/ABC/CSAPP/lab/bomb/bomb.c" 0 39 (ivy-index 0)) #("/home/abcdlsj/ABC/CSAPP/lab/boo" 0 31 (ivy-index 0)) #("/home/abcdlsj/.config/coc/memos.json" 0 36 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-magit.el" 0 41 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-func.el" 0 40 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-editor.el" 0 42 (ivy-index 0)) #("/home/abcdlsj/.config/" 0 22 (ivy-index 0)) "~/.emacs.d/core/init-sly.el" "~/.emacs.d/core/config.el" "~/.emacs.d/init.el" "~/.emacs.d/core/init-company.el" "~/.emacs.d/core/init-ui.el" "~/.emacs.d/core/init-ivy.el" "~/.emacs.d/core/init-vterm.el" "~/.emacs.d/core/init-snippet.el" "~/.emacs.d/core/init-sly.el" "~/.emacs.d/core/init-lsp.el" "~/.emacs.d/core/init-editor.el" "~/.emacs.d/core/init-windows.el" "~/.emacs.d/core/init-keybindings.el" "~/.emacs.d/core/init-custom.el" "~/.emacs.d/core/init-fonts.el" "~/.emacs.d/core/init-packages.el" "~/.emacs.d/core/init-org.el" "~/.emacs.d/bookmarks" "~/.emacs.d/persp-confs/persp-auto-save" "~/.config/i3-scrot.conf" "~/.emacs.d/README.md"))
(setq evil-jumps-history '((567 "/home/abcdlsj/.emacs.d/core/init-awesome.el") (611 "/home/abcdlsj/.emacs.d/core/init-awesome.el") (1 "/home/abcdlsj/D/book/Emacs基础教程.pdf") (18 "/home/abcdlsj/Dropbox/workspace/Python/pyqt/test.py") (155 "/home/abcdlsj/Dropbox/org/blog.org") (375 "/home/abcdlsj/Dropbox/org/blog.org") (465 "/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/树莓派系统安装-使用ffmpeg推流实现b站直播.md") (167 "/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/Sklearn通用学习模式.md") (144 "/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/Sklearn通用学习模式.md") (234 "/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/gdb调试方法总结-基础.md") (204 "/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/BFS和AStar算法解决八数码问题代码.md") (206 "/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/BFS和AStar算法解决八数码问题代码.md") (263 "/home/abcdlsj/Dropbox/n/emacs_operation.org") (315 "/home/abcdlsj/Dropbox/n/emacs_operation.org") (183 "/home/abcdlsj/Dropbox/n/CSAPP/Representing-Manipulating-Information.org") (378 "/home/abcdlsj/Dropbox/n/Arch安装配置双显卡.org") (374 "/home/abcdlsj/Dropbox/org/blog.org") (359 "/home/abcdlsj/Dropbox/n/linux文件夹权限设置.org") (304 "/home/abcdlsj/Dropbox/n/CSAPP/Representing-Manipulating-Information.org") (185 "/home/abcdlsj/Dropbox/n/CSAPP/Representing-Manipulating-Information.org") (165 "/home/abcdlsj/Dropbox/n/linux文件夹权限设置.org") (1221 "/home/abcdlsj/Dropbox/org/blog.org") (1151 "/home/abcdlsj/Dropbox/org/blog.org") (1141 "/home/abcdlsj/Dropbox/org/blog.org") (1466 "/home/abcdlsj/Dropbox/org/blog.org") (1922 "/home/abcdlsj/.emacs.d/core/init-org.el") (2033 "/home/abcdlsj/.emacs.d/core/init-org.el") (2009 "/home/abcdlsj/.emacs.d/core/init-org.el") (1536 "/home/abcdlsj/.emacs.d/core/init-org.el") (596 "/home/abcdlsj/Dropbox/blog/blog.org") (2274 "/home/abcdlsj/.emacs.d/core/init-org.el") (345 "/home/abcdlsj/Dropbox/n/learn_emacs_in_sc.org") (344 "/home/abcdlsj/Dropbox/n/CSAPP/Representing-Manipulating-Information.org") (331 "/home/abcdlsj/Dropbox/n/bigdata_env.org") (471 "/home/abcdlsj/Dropbox/n/linux文件夹权限设置.org") (492 "/home/abcdlsj/Dropbox/n/linux文件夹权限设置.org") (469 "/home/abcdlsj/Dropbox/n/linux文件夹权限设置.org") (1 "/home/abcdlsj/.emacs.d/core/init-packages.el") (643 "/home/abcdlsj/Dropbox/n/CSAPP/Machine-Level-Representation-Of-C-Programs.org") (646 "/home/abcdlsj/Dropbox/n/CSAPP/Machine-Level-Representation-Of-C-Programs.org") (642 "/home/abcdlsj/Dropbox/n/CSAPP/Machine-Level-Representation-Of-C-Programs.org") (301 "/home/abcdlsj/Dropbox/n/CSAPP/Machine-Level-Representation-Of-C-Programs.org") (85 "/home/abcdlsj/Dropbox/n/emacs_operation.org") (287 "/home/abcdlsj/Dropbox/n/learn_emacs_in_sc.org") (1 "/home/abcdlsj/Dropbox/n/learn_emacs_in_sc.el") (257 "/home/abcdlsj/Dropbox/n/bigdata_env.org") (204 "/home/abcdlsj/Dropbox/n/CSAPP/Representing-Manipulating-Information.org") (210 "/home/abcdlsj/Dropbox/n/CSAPP/Machine-Level-Representation-Of-C-Programs.org") (186 "/home/abcdlsj/Dropbox/n/linux文件夹权限设置.org") (105 "/home/abcdlsj/Dropbox/n/Arch安装配置双显卡.org") (113 "/home/abcdlsj/Dropbox/n/org-page搭建blog.org") (490 "/home/abcdlsj/Dropbox/n/linux文件夹权限设置.org") (165 "/home/abcdlsj/Dropbox/n/linux文件夹权限设置.org") (193 "/home/abcdlsj/Dropbox/n/org-page搭建blog.org") (2801 "/home/abcdlsj/Dropbox/n/2019_9-2019_10.org") (128 "/home/abcdlsj/Dropbox/n/CSAPP/Representing-Manipulating-Information.org") (161 "/home/abcdlsj/Dropbox/n/CSAPP/Machine-Level-Representation-Of-C-Programs.org") (160 "/home/abcdlsj/Dropbox/n/CSAPP/Machine-Level-Representation-Of-C-Programs.org") (1 "/home/abcdlsj/Dropbox/n/Arch安装配置双显卡.org") (134 "/home/abcdlsj/Dropbox/n/CSAPP/Representing-Manipulating-Information.org") (5018 "/home/abcdlsj/Dropbox/n/CSAPP/Representing-Manipulating-Information.org") (403 "/home/abcdlsj/Dropbox/blog/blog.org") (403 "/home/abcdlsj/Dropbox/blog/blog.org") (293 "/home/abcdlsj/Dropbox/n/CSAPP/Machine-Level-Representation-Of-C-Programs.org") (214 "/home/abcdlsj/Dropbox/n/CSAPP/Machine-Level-Representation-Of-C-Programs.org") (187 "/home/abcdlsj/Dropbox/n/CSAPP/Machine-Level-Representation-Of-C-Programs.org") (292 "/home/abcdlsj/Dropbox/n/CSAPP/Machine-Level-Representation-Of-C-Programs.org") (169 "/home/abcdlsj/Dropbox/n/CSAPP/Machine-Level-Representation-Of-C-Programs.org") (536 "/home/abcdlsj/Dropbox/blog/blog.org") (430 "/home/abcdlsj/Dropbox/blog/blog.org") (117 "/home/abcdlsj/Dropbox/blog/blog.org") (97 "/home/abcdlsj/Dropbox/blog/blog.org") (427 "/home/abcdlsj/Dropbox/blog/blog.org") (430 "/home/abcdlsj/Dropbox/blog/blog.org") (290 "/home/abcdlsj/Dropbox/blog/blog.org") (291 "/home/abcdlsj/Dropbox/blog/blog.org") (232 "/home/abcdlsj/Dropbox/blog/blog.org") (2231 "/home/abcdlsj/.emacs.d/core/init-org.el") (2210 "/home/abcdlsj/.emacs.d/core/init-org.el") (1169 "/home/abcdlsj/.emacs.d/core/init-org.el") (939 "/home/abcdlsj/.emacs.d/core/init-org.el") (118 "/home/abcdlsj/.emacs.d/core/init-org.el") (1356 "/home/abcdlsj/.emacs.d/core/init-org.el") (2176 "/home/abcdlsj/.emacs.d/core/init-org.el") (18 "/home/abcdlsj/.emacs.d/core/init-org.el") (644 "/home/abcdlsj/Dropbox/blog/blog.org") (255 "/home/abcdlsj/Dropbox/blog/blog.org") (467 "/home/abcdlsj/Dropbox/blog/blog.org") (1 "/home/abcdlsj/.emacs.d/core/init-org.el") (1173 "/home/abcdlsj/.emacs.d/core/init-org.el") (1139 "/home/abcdlsj/.emacs.d/core/init-org.el") (1956 "/home/abcdlsj/.emacs.d/core/init-org.el") (238 "/home/abcdlsj/Dropbox/n/linux文件夹权限设置.org") (394 "/home/abcdlsj/Dropbox/n/linux文件夹权限设置.org") (272 "/home/abcdlsj/Dropbox/n/linux文件夹权限设置.org") (371 "/home/abcdlsj/Dropbox/n/linux文件夹权限设置.org") (1279 "/home/abcdlsj/Dropbox/n/linux文件夹权限设置.org") (1016 "/home/abcdlsj/.emacs.d/core/init-const.el") (2472 "/home/abcdlsj/.emacs.d/core/init-ui.el")))
(setq mark-ring 'nil)
(setq search-ring 'nil)
(setq regexp-search-ring '(#("evil" 0 4 (isearch-case-fold-search nil)) #("blog" 0 4 (isearch-case-fold-search nil)) #("Monaco" 0 6 (isearch-case-fold-search nil)) "ui" #("edit" 0 4 (isearch-case-fold-search t)) #("org-page" 0 8 (isearch-case-fold-search t)) "ele" #("paren" 0 5 (isearch-case-fold-search t)) "all-the" "hook" "ivy-rich" "ivy" #("ivy-rich" 0 8 (isearch-case-fold-search t)) #("ivy" 0 3 (isearch-case-fold-search t)) "addr" #("lsp" 0 3 (isearch-case-fold-search t))))
(setq extended-command-history '("eval-buffer" "scroll-bar-mode" "ivy-mode"))
