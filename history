;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(grep-files-history grep-regexp-history counsel-file-register sly-minibuffer-history org-agenda-search-history counsel-git-grep-history swiper-history org-read-date-history minibuffer-history buffer-name-history sly-connect-port-history sly-connect-host-history command-history magit-git-command-history shell-command-history org-tags-history org-capture--prompt-history ivy-history counsel-describe-symbol-history read-expression-history face-name-history counsel-M-x-history extended-command-history evil-ex-history file-name-history))
(setq grep-regexp-history '("cs"))
(setq org-agenda-search-history '("linux " "virtualbox" "org" "linux" "emacs"))
(setq counsel-git-grep-history '(#("ad" 0 2 (ivy-index 0))))
(setq swiper-history '(#("for" 0 3 (ivy-index 0)) "coun" #("if" 0 2 (ivy-index 0)) "and"))
(setq org-read-date-history '("   "))
(setq minibuffer-history '("link" "https://archives.loomcom.com/genera/genera-install.html" " http://www.reddit.com/r/emacs/.rss
" "emacs" "https://viewsourcecode.org/snaptoken/kilo/02.enteringRawMode.html"))
(setq buffer-name-history '(#("vterm" 0 5 (ivy-index 0)) "boo"))
(setq sly-connect-port-history '("4005"))
(setq sly-connect-host-history '("localhost"))
(setq command-history '((find-file "/home/abcdlsj/Downloads/lisploreguidetop00brom_lisploreguidetop00brom.epub" t) (dired-create-directory "/home/abcdlsj/Dropbox/n/Algorithms") (find-file "/home/abcdlsj/Dropbox/n/" t) (find-file "/home/abcdlsj/Dropbox/n/CSAPP/Representing_Manipulating_Information.org" t) (rename-file "/home/abcdlsj/Dropbox/n/CSAPP/Machine-Level__Representation-Of-C-Programs.org" "/home/abcdlsj/Dropbox/n/CSAPP/Machine-Level__Representation-Of-C-Programs.org" 1) (find-file "/home/abcdlsj/Dropbox/n/CSAPP/Machine-Level__Representation-Of-C-Programs.org" t) (evil-delete 145 176 'line nil nil) (evil-delete 145 146 'line nil nil) (evil-delete 178 178 'line nil nil) (evil-delete 179 185 'line nil nil) (eval-buffer) (find-file "/home/abcdlsj/.emacs.d/core/init-const.el" t) (counsel-ag) (evil-delete 584 642 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-apps.el" t) (nov-mode) (find-file "/home/abcdlsj/Downloads/lisploreguidetop00brom_lisploreguidetop00brom.epub" t) (find-file "/home/abcdlsj/Downloads/" t) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (find-file "/home/abcdlsj/Downloads/lisploreguidetop00brom_lisploreguidetop00brom.epub" t) (find-file "/home/abcdlsj/Dropbox/archive/old_blog_md/Linux 系统下v2ray客户端使用.md" t) (evil-find-char nil 32) (find-file "/home/abcdlsj/Dropbox/org/notes.org" t) (find-file "/home/abcdlsj/Dropbox/org/journal.org" t) (find-file "/home/abcdlsj/.emacs.d/core/init-fonts.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-fonts.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-fonts.el" t) (evil-delete 263 263 'line nil nil) (evil-delete 264 264 'line nil nil) (evil-delete 275 359 'line nil nil) (evil-delete 263 264 'line nil nil) (evil-delete 264 275 'line nil nil) (evil-delete 275 291 'line nil nil) (evil-delete 1115 1132 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-org.el" t) (org-insert-link nil) (describe-key "" 1 nil) (evil-delete 178 192 'line nil nil) (org-time-stamp-inactive nil) (find-file "/home/abcdlsj/Dropbox/n/Running_Open_Genera_Arch.org" t) (evil-delete 35 50 'line nil nil) (org-todo nil) (org-time-stamp nil) (find-file "/home/abcdlsj/.emacs.d/elpa/base16-theme-20191031.1607/base16-default-dark-theme.el" t) (find-file "/home/abcdlsj/.emacs.d/elpa/annalist-20190929.207/annalist.el" t) (find-file "/home/abcdlsj/.emacs.d/banner/MIT_GNU_Scheme_Logo_r.png" t) (find-file "/home/abcdlsj/.emacs.d/core/init-company.el" t) (find-file "/home/abcdlsj/.config/Thunar/accels.scm" t) (customize-changed-options "") (customize-face-other-window '(hl-line)) (evil-mode 'toggle) (find-file "/home/abcdlsj/.emacs.d/core/init-fonts.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-custom.el" t) (telega nil) (sly nil nil t) (find-file "/home/abcdlsj/.emacs.d/core/init-fonts.el" t) (evil-record-macro 32) (find-file "/home/abcdlsj/workspace/lisp/CL/ansicl.lisp" t) (sly nil nil t) (sly nil nil t) (find-file "/home/abcdlsj/.emacs.d/core/init-sly.el" t) (swiper-recenter-top-bottom nil) (evil-record-macro 32) (sly nil nil t) (evil-replace 390 391 'exclusive 40) (evil-find-char nil 111) (evil-yank 603 649 'line nil nil) (evil-yank 603 649 'line nil nil) (evil-yank 603 649 'line nil nil) (sly nil nil t) (evil-delete 1 18 'line nil nil) (evil-delete 71 72 'line nil nil) (evil-delete 72 82 'line nil nil) (sly nil nil t) (find-file "/home/abcdlsj/workspace/lisp/CL/ansicl.lisp" t) (find-file "/home/abcdlsj/workspace/lisp/CL/ansiCL.org" t) (sly nil nil t) (evil-find-char nil 32) (evil-find-char nil 100) (evil-find-char nil 100) (counsel-file-register) (find-file "/home/abcdlsj/.emacs.d/core/init-keybindings.el" t) (delete-file "/home/abcdlsj/workspace/lisp/CL/ansiCL.org~" t) (evil-delete 59 655 'line nil nil) (sly nil nil t) (evil-delete 1 13 'line nil nil) (sly-enable-contrib 'sly-fancy) (sly-setup) (sly nil nil t) (evil-delete 104 147 'line nil nil) (evil-delete 1106 1147 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/init.el" t) (evil-record-macro 32) (sly nil nil t) (evil-delete 625 625 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-org.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-sly.el" t) (find-file "/home/abcdlsj/workspace/lisp/CL/ansiCL.org" t) (find-file "/home/abcdlsj/.emacs.d/core/init-org.el" t) (sly nil nil t) (podcaster) (podcaster) (kill-buffer "vterm") (find-file "/home/abcdlsj/.emacs.d/core/init-ivy.el" t) (evil-find-char nil 102) (find-file "/home/abcdlsj/.emacs.d/core/init-sly.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-sly.el" t) (evil-use-register 58) (sly-list-connections) (sly nil nil t) (sly nil nil t) (sly nil nil t) (sly nil nil t) (evil-record-macro 32) (sly nil nil t) (sly nil nil t) (sly nil nil t) (find-file "/home/abcdlsj/.emacs.d/core/init-sly.el" t) (evil-yank 1 48 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-sly.el" t) (find-file "/home/abcdlsj/.emacs.d/elpa/sly-20191218.2148/sly-autoloads.el" t) (find-file "/home/abcdlsj/.emacs.d/elpa/sly-20191218.2148/" t) (find-file "/home/abcdlsj/.emacs.d/core/init-sly.el" t) (find-file "/home/abcdlsj/.emacs.d/elpa/sly-20191218.2148/sly-autoloads.el" t) (evil-delete 76 101 'line nil nil) (evil-delete 76 129 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-sly.el" t) (evil-delete 1 2 'line nil nil) (evil-delete 130 131 'line nil nil) (evil-delete 102 130 'line nil nil) (evil-delete 77 105 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-sly.el" t) (evil-delete 29 56 'line nil nil) (evil-delete 105 130 'line nil nil) (evil-delete 105 124 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-sly.el" t) (evil-delete 628 628 'line nil nil) (evil-delete 628 657 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-sly.el" t) (find-file "/home/abcdlsj/.emacs.d/init.el" t) (evil-delete 1364 1377 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (evil-delete 1 45 'line nil nil) (evil-find-char nil 102) (evil-delete 1034 1075 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-org.el" t) (evil-delete 273 274 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-lisp.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-org.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-lisp.el" t) (evil-find-char nil 102) (evil-delete 1 2 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-lisp.el" t) (evil-delete 601 602 'line nil nil) (evil-delete 602 613 'line nil nil) (evil-delete 613 631 'line nil nil) (evil-delete 264 282 'line nil nil) (evil-delete 238 239 'line nil nil) (evil-delete 239 250 'line nil nil) (evil-delete 250 264 'line nil nil) (evil-delete 228 237 'line nil nil) (evil-delete 1 27 'line nil nil) (find-file "/home/abcdlsj/ABC/lisp/CL/ansiCL.org" t) (find-file "/home/abcdlsj/.emacs.d/init.el" t) (find-file "/home/abcdlsj/ABC/lisp/CL/1.org" t) (run-racket) (find-file "/home/abcdlsj/ABC/lisp/CL/helloworld.lisp" t) (run-lisp "/usr/bin/scheme") (rename-file "/home/abcdlsj/ABC/lisp/CL/1.lisp" "/home/abcdlsj/ABC/lisp/CL/helloworld.lisp" 1) (find-file "/home/abcdlsj/ABC/lisp/CL/1.lisp" t) (inferior-lisp "/usr/bin/scheme") (find-file "/home/abcdlsj/.emacs.d/core/init-sly.el" t) (sly-abort-connection) (evil-delete 1 8 'line nil nil) (sly-quicklisp-mode 'toggle) (sly nil nil t) (find-file "/home/abcdlsj/ABC/lisp/CL/fft.lisp" t) (find-file "/home/abcdlsj/ABC/lisp/SICP/2/2.org" t) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (find-file "/home/abcdlsj/.emacs.d/init.el" t) (evil-delete 1015 1057 'line nil nil) (evil-use-register 119) (find-file "/home/abcdlsj/.emacs.d/core/init-lisp.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-org.el" t) (find-file "/home/abcdlsj/ABC/lisp/SICP/2/2.org" t) (find-file "/home/abcdlsj/.emacs.d/core/init-org.el" t) (evil-delete 923 924 'line nil nil) (evil-delete 982 983 'line nil nil) (evil-delete 1053 1054 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-org.el" t) (evil-delete 3655 3795 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-cc.el" t) (counsel-rg) (evil-change 1 2 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/init.el" t) (evil-record-macro 10) (evil-record-macro 58) (evil-record-macro 58) (complete-symbol nil) (swiper) (eval-buffer) (find-file "/home/abcdlsj/.emacs.d/core/init-ivy.el" t) (find-file "/home/abcdlsj/.xinitrc" t) (evil-delete 1464 1465 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-ivy.el" t) (find-file "/home/abcdlsj/ABC/lisp/SICP/2/2.1.4.scm" t) (find-file "/home/abcdlsj/.emacs.d/core/init-edit.el" t) (find-file "/home/abcdlsj/ABC/wis/wis.c" t) (find-file "/home/abcdlsj/.emacs.d/core/init-edit.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (find-file "/home/abcdlsj/.config/i3/config" t) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (evil-delete 549 578 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-apps.el" t) (mingus nil) (find-file "/home/abcdlsj/.emacs.d/core/init-apps.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (run-scheme "scheme") (elfeed-org) (elfeed-search-update) (elfeed) (sly-list-connections) (sly-quicklisp-mode 'toggle) (sly-abort-connection) (sly nil nil t) (find-file "/home/abcdlsj/ABC/lisp/SICP/2/2.1.4.scm" t) (find-file "/home/abcdlsj/ABC/lisp/SICP/2/2.6.scm" t) (find-file "/home/abcdlsj/.emacs.d/elpa/base16-theme-20191031.1607/" t) (find-file "/home/abcdlsj/.emacs.d/banner/MIT_GNU_Scheme_Logo_r.png" t) (evil-delete 145 147 'line nil nil) (evil-delete 145 154 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/core/init-const.el" t) (find-file "/home/abcdlsj/Dropbox/org/journal.org" t) (telega nil) (telega nil) (evil-record-macro 113) (evil-record-macro 113) (telega nil) (evil-delete 2119 2126 'line nil nil) (evil-delete 1972 1985 'line nil nil) (find-file "/home/abcdlsj/C/Users/abcdlsj/Desktop/taxi/taxi.v" t) (find-file "/home/abcdlsj/.emacs.d/core/init-ui.el" t) (evil-find-char nil 102) (evil-record-macro 58) (telega nil) (evil-change 10097 10160 'exclusive nil nil) (smartparens-global-mode 'toggle) (show-smartparens-mode 'toggle) (find-file "/home/abcdlsj/.emacs.d/core/init-edit.el" t) (find-file "/home/abcdlsj/ABC/wis/Makefile" t) (evil-delete 682 704 'line nil nil) (find-file "/home/abcdlsj/ABC/wis/wis.c" t) (text-mode) (find-file "/home/abcdlsj/.emacs.d/core/init-edit.el" t) (find-file "/home/abcdlsj/.emacs.d/core/init-packages.el" t) (all-the-icons-insert-fileicon nil) (evil-delete 1088 1101 'line nil nil) (find-file "/home/abcdlsj/.emacs.d/elpa/all-the-icons-ivy-20190508.1803/" t) (find-file "/home/abcdlsj/.emacs.d/core/init-ivy.el" t) (find-file "/home/abcdlsj/.emacs.d/init.el" t) (find-file "~/.emacs.d/init.el" t) (evil-delete 577 589 'line nil nil) (find-file "~/.emacs.d/core/init-ivy.el" t) (find-file "~/.emacs.d/core/init-keybindings.el" t) (evil-delete 726 740 'line nil nil) (evil-delete 1 2 'line nil nil) (find-file "~/.emacs.d/core/init-packages.el" t) (find-file "~/.emacs.d/core/init-ivy.el" t) (image-increase-size nil) (image-increase-size nil) (image-increase-size nil) (elfeed-add-feed "http://www.reddit.com/r/emacs/.rss" ':save t) (evil-goto-mark 24) (elfeed-search-update) (elfeed-search-tag-all 'emacs) (elfeed) (elfeed) (elfeed-org) (evil-record-macro 58) (evil-use-register 58) (evil-use-register 119) (evil-delete 570 595 'line nil nil) (elfeed-org) (elfeed) (evil-delete 459 467 'line nil nil) (evil-delete 443 476 'line nil nil) (package-list-packages nil) (evil-change 1 1 'exclusive nil nil) (evil-find-char nil 114) (evil-find-char nil 114) (counsel-recentf) (evil-record-macro 10) (evil-record-macro 58) (elfeed-org) (package-refresh-contents) (package-refresh-contents) (evil-find-char nil 102) (telega nil) (telega nil) (telega nil) (evil-record-macro 113) (evil-record-macro 113) (telega nil) (telega-describe-message nil) (evil-record-macro 10) (telega nil) (telega-company-emoji 'interactive) (telega nil) (telega-msg-redisplay nil) (telega-msg-reply '(:@type "message" :id 816840704 :sender_user_id 559868873 :chat_id 559868873 :is_outgoing t :can_be_edited t :can_be_forwarded t :can_be_deleted_only_for_self t :can_be_deleted_for_all_users nil :is_channel_post nil :contains_unread_mention nil :date 1577704007 :edit_date 0 :reply_to_message_id 0 :ttl 0 :ttl_expires_in 0.0 :via_bot_user_id 0 :author_signature "" :views 0 :media_album_id "0" :content (:@type "messageText" :text (:@type "formattedText" :text "le" :entities [])))) (telega-mode-line-mode 'toggle) (telega-mode-line-mode 'toggle) (telega nil) (evil-delete 1264 1273 'line nil nil) (evil-delete 1273 1301 'line nil nil) (evil-delete 1273 1302 'line nil nil) (evil-delete 752 761 'line nil nil) (sdcv-check) (sdcv-search-pointer+) (eww "https://viewsourcecode.org/snaptoken/kilo/02.enteringRawMode.html") (sdcv-search-pointer+) (sdcv-mode) (sdcv-search-pointer+) (sdcv-search-pointer+) (sdcv-check) (sdcv-search-pointer+) (sdcv-search-pointer+) (sdcv-search-pointer+) (sdcv-check) (sdcv-check) (sdcv-check) (sdcv-search-pointer) (sdcv-search-pointer+) (eval-buffer) (evil-delete 130 197 'line nil nil) (evil-delete 145 146 'line nil nil) (evil-delete 500 544 'line nil nil) (evil-delete 2213 2236 'line nil nil) (list-directory "/home/abcdlsj/.emacs.d/" nil) (eww "https://viewsourcecode.org/snaptoken/kilo/02.enteringRawMode.html") (vterm-other-window) (vterm) (evil-goto-mark 36824) (org-agenda-add-note nil) (projectile-dired) (projectile-find-tag) (all-the-icons-insert nil) (all-the-icons-insert nil) (all-the-icons-insert nil) (all-the-icons-install-fonts nil) (all-the-icons-install-fonts nil) (evil-record-macro 58) (evil-record-macro 58) (telega nil) (kill-buffer "boo") (telega nil) (evil-delete 1 21 'line nil nil) (evil-delete 1 2 'line nil nil) (evil-record-macro 10) (evil-record-macro 58) (evil-record-macro 10) (evil-record-macro 58) (evil-delete 1 12 'line nil nil) (evil-delete 108 109 'line nil nil) (sly-abort-connection) (sly nil nil t) (sly-abort-connection) (sly-connect "localhost" 4005 nil t) (sly nil nil t) (evil-find-char nil 32) (evil-find-char nil 32) (evil-find-char nil 32) (evil-find-char nil 102) (evil-find-char nil 102)))
(setq magit-git-command-history '("q" "git q" "q"))
(setq shell-command-history '("ls" "uname -r"))
(setq org-tags-history '(#("python" 0 6 (ivy-index 0)) #("da" 0 2 (ivy-index 0)) #("Arch,Gentoo,emacs,fcitx,linux" 0 29 (ivy-index 0)) #("emacs,linux.Gentoo,Arch" 0 23 (ivy-index 0)) #("emacs" 0 5 (ivy-index 0)) "linux,Arch" #("i3" 0 2 (ivy-index 0))))
(setq org-capture--prompt-history '(#("TypeError: an integer is required (got type bytes)" 0 50 (ivy-index 0))))
(setq ivy-history '(#("ep" 0 2 (ivy-index 0)) #("sc" 0 2 (ivy-index 0)) "/home/abcdlsj/Downloads/lisploreguidetop00brom_lisploreguidetop00brom.epub" #("^j" 0 2 (ivy-index 0)) "/home/abcdlsj/Dropbox/n/Running_Open_Genera_Arch.org" #("init-fonts.el" 0 13 (ivy-index 0)) "/home/abcdlsj/Dropbox/n/Running_Open_Genera_Arch.org" #("Running_Open_Genera_Arch.org" 0 28 (ivy-index 0)) #("init-sly.el" 0 11 (ivy-index 0)) #("ansiCL." 0 7 (ivy-index 0)) #("ansicl." 0 7 (ivy-index 1)) "ansicl.lisp" "clisp" "(start a new one)" "ansicl.lisp" "sbcl" "*sly-mrepl for sbcl*" #("ansiCL.org" 0 10 (ivy-index 0)) #("sly-" 0 4 (ivy-index 0)) "clisp" #("init-org.el" 0 11 (ivy-index 0)) "*sly-mrepl for clisp*" "/home/abcdlsj/workspace/lisp/CL/ansiCL.org" "Emacs Chats - Sacha Chua - 2015-12-10 Emacs Chat: John Wiegley on maintaining Emacs and how you can help" "ob-lisp.el.gz" #("ans" 0 3 (ivy-index 0)) #("init" 0 4 (ivy-index 0)) "init-lisp.el" "sicp" "init-lisp.el" "1.lisp" #("t" 0 1 (ivy-index 0)) "/home/abcdlsj/.emacs.d/core/init-edit.el" "*elfeed-log*" "2.1.4.scm" #("scr" 0 3 (ivy-index 0)) #("j" 0 1 (ivy-index 0)) #("jo" 0 2 (ivy-index 0)) #("wis" 0 3 (ivy-index 0)) #("edit.el" 0 7 (ivy-index 0)) #("ed" 0 2 (ivy-index 0)) #("wis/" 0 4 (ivy-index 2)) "*scratch*" #("apps.el" 0 7 (ivy-index 0)) "init-apps.el" #("v" 0 1 (ivy-index 1)) "*dashboard*" #("memo" 0 4 (ivy-index 0)) #("music" 0 5 (ivy-index 4)) "boo" "*Compile-Log*" #("^" 0 1 (ivy-index 2))))
(setq counsel-describe-symbol-history '(#("^org-babel-lisp-" 0 16 (ivy-index 1)) #("^org-babel-exe" 0 14 (ivy-index 0)) #("^org-babel-lisp-eval-fn" 0 23 (ivy-index 0))))
(setq read-expression-history '("q"))
(setq face-name-history '("hl-line"))
(setq counsel-M-x-history '(#("^rename" 0 7 (ivy-index 1)) #("^eval-buffer" 0 12 (ivy-index 0)) #("^counsel-ag" 0 11 (ivy-index 0)) #("^nov" 0 4 (ivy-index 0)) #("^package-in" 0 11 (ivy-index 0)) #("^package-install" 0 16 (ivy-index 0)) #("^org-insert-link" 0 16 (ivy-index 1)) #("^org-time-" 0 10 (ivy-index 0)) #("^org-todo" 0 9 (ivy-index 0)) #("org-time" 0 8 (ivy-index 9)) #("^customize" 0 10 (ivy-index 0)) #("customize-f" 0 11 (ivy-index 1)) #("^evil-mode" 0 10 (ivy-index 0)) #("^telega" 0 7 (ivy-index 133)) #("^sly" 0 4 (ivy-index 0)) #("^swiper" 0 7 (ivy-index 0)) #("^rg" 0 3 (ivy-index 0)) #("run-c" 0 5 (ivy-index 0)) #("^counsel-file-" 0 14 (ivy-index 0)) #("^delete-file" 0 12 (ivy-index 1)) #("^sly-en" 0 7 (ivy-index 0)) #("^sly-se" 0 7 (ivy-index 0)) #("podcaster" 0 9 (ivy-index 2)) #("^podcaster" 0 10 (ivy-index 2)) #("^magit-add" 0 10 (ivy-index 1)) #("^sly-list-" 0 10 (ivy-index 0)) #("^sl" 0 3 (ivy-index 0)) #("^run-racket" 0 11 (ivy-index 0)) #("^run-li" 0 7 (ivy-index 0)) #("^rename-" 0 8 (ivy-index 1)) #("^infer" 0 6 (ivy-index 2)) #("^sly-a" 0 6 (ivy-index 5)) #("^sly-qui" 0 8 (ivy-index 3)) #("^sly-qu" 0 7 (ivy-index 4)) #("^counsel-rg" 0 11 (ivy-index 0)) #("complete-s" 0 10 (ivy-index 1)) #("^mingus" 0 7 (ivy-index 43)) #("sch" 0 3 (ivy-index 2)) #("^elfeed-org" 0 11 (ivy-index 1)) #("^elfeed" 0 7 (ivy-index 29)) #("^sly-lis" 0 8 (ivy-index 0)) #("^sly-abor" 0 9 (ivy-index 0)) #("^string" 0 7 (ivy-index 1)) #("^smar" 0 5 (ivy-index 2)) #("smartparens" 0 11 (ivy-index 7)) #("^text" 0 5 (ivy-index 1)) #("all-the-icons-ins" 0 17 (ivy-index 6)) #("image-in" 0 8 (ivy-index 0)) #("^image" 0 6 (ivy-index 1)) #("image-" 0 6 (ivy-index 1)) #("^elfeed-add" 0 11 (ivy-index 0)) #("^elfeed-" 0 8 (ivy-index 28)) #("^package-list-packages" 0 22 (ivy-index 0)) #("^counsel-re" 0 11 (ivy-index 1)) #("^package-refresh-contents" 0 25 (ivy-index 0)) #("^telega-" 0 8 (ivy-index 41)) #("telega" 0 6 (ivy-index 133)) #("^telega-msg-" 0 12 (ivy-index 2)) #("telega-msg" 0 10 (ivy-index 5)) #("^telega-mode" 0 12 (ivy-index 0)) #("telega-mode" 0 11 (ivy-index 0)) #("^sdcv" 0 5 (ivy-index 0)) #("sdcv-se" 0 7 (ivy-index 0)) #("^eww" 0 4 (ivy-index 3)) #("^sdcv-search-" 0 13 (ivy-index 0)) #("^sdcv-mode" 0 10 (ivy-index 0)) #("^sdcv-s" 0 7 (ivy-index 2)) #("^sdcv-" 0 6 (ivy-index 0)) #("^sdcv-check" 0 11 (ivy-index 0)) #("^sdcv-se" 0 8 (ivy-index 1)) #("^vterm-o" 0 8 (ivy-index 0)) #("^vterm" 0 6 (ivy-index 20)) #("note" 0 4 (ivy-index 7)) #("projectile" 0 10 (ivy-index 78)) #("^project" 0 8 (ivy-index 3)) #("^all-t" 0 6 (ivy-index 4)) #("^all-the" 0 8 (ivy-index 4)) #("^all" 0 4 (ivy-index 3)) #("^sly-abo" 0 8 (ivy-index 0)) #("^sly-abort-connection" 0 21 (ivy-index 0)) #("^sly-connect" 0 12 (ivy-index 1)) #("^magit-status" 0 13 (ivy-index 0)) #("^magit-v" 0 8 (ivy-index 0)) #("elisp" 0 5 (ivy-index 0)) #("emacs-ma" 0 8 (ivy-index 0)) #("eval" 0 4 (ivy-index 6)) #("^eval" 0 5 (ivy-index 5)) #("^shell" 0 6 (ivy-index 8)) #("^eva" 0 4 (ivy-index 5)) #("^customize-face" 0 15 (ivy-index 0))))
(setq extended-command-history '("ivy-mode"))
(setq evil-ex-history '(#("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("ww" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("ww" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 10156)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wwq" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("qw" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("\"w" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1))))
(setq file-name-history '(#("/home/abcdlsj/Downloads/lisploreguidetop00brom_lisploreguidetop00brom.epub" 0 74 (ivy-index 0)) #("/home/abcdlsj/Dropbox/n/Algorithms" 0 34 (ivy-index 0)) #("/home/abcdlsj/Dropbox/n/" 0 24 (ivy-index 0)) #("/home/abcdlsj/Dropbox/n/CSAPP/Representing_Manipulating_Information.org" 0 71 (ivy-index 1)) #("/home/abcdlsj/Dropbox/n/CSAPP/Machine-Level__Representation-Of-C-Programs.org" 0 77 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-const.el" 0 41 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-apps.el" 0 40 (ivy-index 0)) #("/home/abcdlsj/Downloads/" 0 24 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-packages.el" 0 44 (ivy-index 0)) #("/home/abcdlsj/Dropbox/archive/old_blog_md/Linux 系统下v2ray客户端使用.md" 0 64 (ivy-index 0)) #("/home/abcdlsj/Dropbox/org/notes.org" 0 35 (ivy-index 0)) #("/home/abcdlsj/Dropbox/org/journal.org" 0 37 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-fonts.el" 0 41 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-org.el" 0 39 (ivy-index 0)) #("/home/abcdlsj/Dropbox/n/Running_Open_Genera_Arch.org" 0 52 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/elpa/base16-theme-20191031.1607/base16-default-dark-theme.el" 0 83 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/elpa/annalist-20190929.207/annalist.el" 0 61 (ivy-index 2)) #("/home/abcdlsj/.emacs.d/banner/MIT_GNU_Scheme_Logo_r.png" 0 55 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-company.el" 0 43 (ivy-index 2)) #("/home/abcdlsj/.config/Thunar/accels.scm" 0 39 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/custom.el" 0 32 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-custom.el" 0 42 (ivy-index 0)) #("/home/abcdlsj/workspace/lisp/CL/ansicl.lisp" 0 43 (ivy-index 1)) #("/home/abcdlsj/.emacs.d/core/init-sly.el" 0 39 (ivy-index 0)) #("/home/abcdlsj/workspace/lisp/CL/ansiCL.org" 0 42 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-keybindings.el" 0 47 (ivy-index 0)) #("/home/abcdlsj/workspace/lisp/CL/ansiCL.org~" 0 43 (ivy-index 3)) #("/home/abcdlsj/.emacs.d/init.el" 0 30 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-cc.el" 0 38 (ivy-index 1)) #("/home/abcdlsj/.emacs.d/core/init-ivy.el" 0 39 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/elpa/sly-20191218.2148/sly-autoloads.el" 0 62 (ivy-index 1)) #("/home/abcdlsj/.emacs.d/elpa/sly-20191218.2148/" 0 46 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-lisp.el" 0 40 (ivy-index 0)) #("/home/abcdlsj/ABC/lisp/CL/ansiCL.org" 0 36 (ivy-index 0)) #("/home/abcdlsj/ABC/lisp/CL/1.org" 0 31 (ivy-index 0)) #("/home/abcdlsj/ABC/lisp/CL/helloworld.lisp" 0 41 (ivy-index 0)) #("/home/abcdlsj/ABC/lisp/CL/1.lisp" 0 32 (ivy-index 0)) #("/home/abcdlsj/ABC/lisp/CL/fft.lisp" 0 34 (ivy-index 0)) #("/home/abcdlsj/ABC/lisp/SICP/2/2.org" 0 35 (ivy-index 0)) "/home/abcdlsj/sc" #("/home/abcdlsj/.xinitrc" 0 22 (ivy-index 0)) #("/home/abcdlsj/ABC/lisp/SICP/2/2.1.4.scm" 0 39 (ivy-index 1)) #("/home/abcdlsj/.emacs.d/core/init-edit.el" 0 40 (ivy-index 0)) #("/home/abcdlsj/ABC/wis/wis.c" 0 27 (ivy-index 1)) #("/home/abcdlsj/.config/i3/config" 0 31 (ivy-index 0)) #("/home/abcdlsj/ABC/lisp/SICP/2/2.6.scm" 0 37 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/elpa/base16-theme-20191031.1607/" 0 55 (ivy-index 1)) #("/home/abcdlsj/C/Users/abcdlsj/Desktop/taxi/taxi.v" 0 49 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-ui.el" 0 38 (ivy-index 0)) #("/home/abcdlsj/ABC/wis/Makefile" 0 30 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/elpa/all-the-icons-ivy-20190508.1803/" 0 60 (ivy-index 1)) "~/.emacs.d/init.el" "~/.emacs.d/core/init-ivy.el" "~/.emacs.d/core/init-keybindings.el" "~/.emacs.d/core/init-packages.el" "~/.emacs.d/core/init-ivy.el" #("/home/abcdlsj/Dropbox/org/elfeed.org" 0 36 (ivy-index 0)) #("/home/abcdlsj/.elfeed/" 0 22 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/" 0 23 (ivy-index 0)) #("/home/abcdlsj/ABC/wis/compile_commands.json" 0 43 (ivy-index 4)) #("/home/abcdlsj/.cargo/registry/" 0 30 (ivy-index 0)) #("/home/abcdlsj/.cargo/env" 0 24 (ivy-index 0)) #("/home/abcdlsj/.gitconfig" 0 24 (ivy-index 1)) #("/home/abcdlsj/.emacs.d/core/init-vterm.el" 0 41 (ivy-index 0)) #("/home/abcdlsj/Dropbox/org/task.org" 0 34 (ivy-index 1)) #("/home/abcdlsj/.config/i3blocks/memory/i3blocks.conf" 0 51 (ivy-index 3)) #("/home/abcdlsj/.config/i3blocks/disk/i3blocks.conf" 0 49 (ivy-index 0)) #("/home/abcdlsj/.config/i3blocks/disk/" 0 36 (ivy-index 0)) #("/home/abcdlsj/.config/i3blocks/memory/memory" 0 44 (ivy-index 0)) #("/home/abcdlsj/.config/i3blocks/config" 0 37 (ivy-index 0)) #("/home/abcdlsj/ABC/CSAPP/lab/bomb/bomb.c" 0 39 (ivy-index 0)) #("/home/abcdlsj/ABC/CSAPP/lab/boo" 0 31 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-funcs.el" 0 41 (ivy-index 0)) #("/home/abcdlsj/.config/coc/memos.json" 0 36 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-magit.el" 0 41 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-func.el" 0 40 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-editor.el" 0 42 (ivy-index 0)) #("/home/abcdlsj/.config/" 0 22 (ivy-index 0)) "~/.emacs.d/core/init-sly.el" "~/.emacs.d/core/config.el" "~/.emacs.d/init.el" "~/.emacs.d/core/init-company.el" "~/.emacs.d/core/init-ui.el" "~/.emacs.d/core/init-ivy.el" "~/.emacs.d/core/init-vterm.el" "~/.emacs.d/core/init-snippet.el" "~/.emacs.d/core/init-sly.el" "~/.emacs.d/core/init-lsp.el" "~/.emacs.d/core/init-editor.el" "~/.emacs.d/core/init-windows.el" "~/.emacs.d/core/init-keybindings.el" "~/.emacs.d/core/init-custom.el" "~/.emacs.d/core/init-fonts.el" "~/.emacs.d/core/init-packages.el" "~/.emacs.d/core/init-org.el" "~/.emacs.d/bookmarks" "~/.emacs.d/persp-confs/persp-auto-save" "~/.config/i3-scrot.conf" "~/.emacs.d/README.md"))
(setq evil-jumps-history '((1 "/home/abcdlsj/.emacs.d/core/init-const.el") (1 "/home/abcdlsj/.emacs.d/core/init-fonts.el") (1558 "/home/abcdlsj/.emacs.d/core/init-packages.el") (563 "/home/abcdlsj/.emacs.d/core/init-packages.el") (1 "/home/abcdlsj/Dropbox/org/notes.org") (6777 "/home/abcdlsj/Dropbox/org/journal.org") (6665 "/home/abcdlsj/Dropbox/org/journal.org") (6467 "/home/abcdlsj/Dropbox/org/journal.org") (6391 "/home/abcdlsj/Dropbox/org/journal.org") (6373 "/home/abcdlsj/Dropbox/org/journal.org") (6352 "/home/abcdlsj/Dropbox/org/journal.org") (5246 "/home/abcdlsj/Dropbox/org/journal.org") (5174 "/home/abcdlsj/Dropbox/org/journal.org") (5120 "/home/abcdlsj/Dropbox/org/journal.org") (5105 "/home/abcdlsj/Dropbox/org/journal.org") (5024 "/home/abcdlsj/Dropbox/org/journal.org") (4891 "/home/abcdlsj/Dropbox/org/journal.org") (4815 "/home/abcdlsj/Dropbox/org/journal.org") (4709 "/home/abcdlsj/Dropbox/org/journal.org") (4626 "/home/abcdlsj/Dropbox/org/journal.org") (4473 "/home/abcdlsj/Dropbox/org/journal.org") (4362 "/home/abcdlsj/Dropbox/org/journal.org") (4260 "/home/abcdlsj/Dropbox/org/journal.org") (4149 "/home/abcdlsj/Dropbox/org/journal.org") (4040 "/home/abcdlsj/Dropbox/org/journal.org") (3950 "/home/abcdlsj/Dropbox/org/journal.org") (3854 "/home/abcdlsj/Dropbox/org/journal.org") (3719 "/home/abcdlsj/Dropbox/org/journal.org") (3576 "/home/abcdlsj/Dropbox/org/journal.org") (3492 "/home/abcdlsj/Dropbox/org/journal.org") (3438 "/home/abcdlsj/Dropbox/org/journal.org") (3359 "/home/abcdlsj/Dropbox/org/journal.org") (3306 "/home/abcdlsj/Dropbox/org/journal.org") (3241 "/home/abcdlsj/Dropbox/org/journal.org") (3025 "/home/abcdlsj/Dropbox/org/journal.org") (2989 "/home/abcdlsj/Dropbox/org/journal.org") (2825 "/home/abcdlsj/Dropbox/org/journal.org") (2700 "/home/abcdlsj/Dropbox/org/journal.org") (2603 "/home/abcdlsj/Dropbox/org/journal.org") (2429 "/home/abcdlsj/Dropbox/org/journal.org") (2265 "/home/abcdlsj/Dropbox/org/journal.org") (2094 "/home/abcdlsj/Dropbox/org/journal.org") (1976 "/home/abcdlsj/Dropbox/org/journal.org") (1919 "/home/abcdlsj/Dropbox/org/journal.org") (1881 "/home/abcdlsj/Dropbox/org/journal.org") (1556 "/home/abcdlsj/Dropbox/org/journal.org") (1427 "/home/abcdlsj/Dropbox/org/journal.org") (1299 "/home/abcdlsj/Dropbox/org/journal.org") (1173 "/home/abcdlsj/Dropbox/org/journal.org") (1087 "/home/abcdlsj/Dropbox/org/journal.org") (922 "/home/abcdlsj/Dropbox/org/journal.org") (848 "/home/abcdlsj/Dropbox/org/journal.org") (708 "/home/abcdlsj/Dropbox/org/journal.org") (607 "/home/abcdlsj/Dropbox/org/journal.org") (1 "/home/abcdlsj/Dropbox/org/journal.org") (565 "/home/abcdlsj/Dropbox/n/Running_Open_Genera_Arch.org") (1123 "/home/abcdlsj/.emacs.d/core/init-org.el") (1115 "/home/abcdlsj/.emacs.d/core/init-org.el") (241 "/home/abcdlsj/Dropbox/n/Running_Open_Genera_Arch.org") (112 "/home/abcdlsj/Dropbox/n/Running_Open_Genera_Arch.org") (177 "/home/abcdlsj/Dropbox/n/Running_Open_Genera_Arch.org") (112 "/home/abcdlsj/Dropbox/n/Running_Open_Genera_Arch.org") (112 "/home/abcdlsj/Dropbox/n/Running_Open_Genera_Arch.org") (57 "/home/abcdlsj/Dropbox/n/Running_Open_Genera_Arch.org") (1 "/home/abcdlsj/.emacs.d/core/init-custom.el") (4 "/home/abcdlsj/workspace/lisp/CL/ansiCL.org") (78 "/home/abcdlsj/workspace/lisp/CL/ansicl.lisp") (360 "/home/abcdlsj/workspace/lisp/CL/ansicl.lisp") (225 "/home/abcdlsj/workspace/lisp/CL/ansicl.lisp") (238 "/home/abcdlsj/workspace/lisp/CL/ansicl.lisp") (239 "/home/abcdlsj/workspace/lisp/CL/ansicl.lisp") (60 "/home/abcdlsj/workspace/lisp/CL/ansicl.lisp") (120 "/home/abcdlsj/workspace/lisp/CL/ansicl.lisp") (1 "/home/abcdlsj/workspace/lisp/CL/ansicl.lisp") (1 "/home/abcdlsj/workspace/lisp/CL/ansicl.lisp") (94 "/home/abcdlsj/workspace/lisp/CL/ansiCL.org") (58 "/home/abcdlsj/workspace/lisp/CL/ansiCL.org") (171 "/home/abcdlsj/.emacs.d/core/init-sly.el") (1 "/home/abcdlsj/workspace/lisp/CL/ansiCL.org") (568 "/home/abcdlsj/workspace/lisp/CL/ansiCL.org") (63 "/home/abcdlsj/workspace/lisp/CL/ansiCL.org") (586 "/home/abcdlsj/workspace/lisp/CL/ansiCL.org") (3404 "/home/abcdlsj/Dropbox/org/task.org") (552 "/home/abcdlsj/Dropbox/org/task.org")))
(setq mark-ring 'nil)
(setq search-ring 'nil)
(setq regexp-search-ring '("read" "for" "sly" "lisp" "provide" "gei" "lang" "if" "ivy" "edito" "floatn" "floating" "apps" "ivy" "elfeeda" "elfeed"))
(setq extended-command-history '("ivy-mode"))
