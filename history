;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(org-link--history xref--read-pattern-history empty-history read-expression-history org--links-history counsel-describe-symbol-history buffer-name-history minibuffer-history org-tags-history org-capture--prompt-history counsel-git-grep-history extended-command-history swiper-history org-agenda-search-history counsel-M-x-history file-name-history ivy-history evil-ex-history))
(setq xref--read-pattern-history '("cs"))
(setq read-expression-history '("w"))
(setq counsel-describe-symbol-history '(#("^doom-themes" 0 12 (ivy-index 4))))
(setq minibuffer-history '("file:./img/1000002.png" "知乎文章<<python输出自身的四种写法>>" "https://zhuanlan.zhihu.com/p/34882073" "知乎文章<<python输出自身的四种写法>>" "+19378880075" "+1 9378880075" "cs" "+1 9378880076" "abcdlsj" "Arch Wiki " "Arch Wiki initramfs" "wiki Quine" "https://en.wikipedia.org/wiki/Quine_(computing)" "wiki Quine" "LeetCode \"乙亥年最有趣的比赛\" 题解" "clear"))
(setq org-tags-history '(#("li" 0 2 (ivy-index 0)) #(":emacs:q" 0 8 (ivy-index 0)) #(":OJ:@learn" 0 10 (ivy-index 0)) #("OJ" 0 2 (ivy-index 0)) #("lsp" 0 3 (ivy-index 0)) #("lsp,emacs" 0 9 (ivy-index 0)) #("dail" 0 4 (ivy-index 0))))
(setq org-capture--prompt-history '(#("ntfsfix" 0 7 (ivy-index 0))))
(setq counsel-git-grep-history '(#("neotr" 0 5 (ivy-index 1)) #("neo" 0 3 (ivy-index 1)) #("neotree" 0 7 (ivy-index 0)) #("hl-line-mode" 0 12 (ivy-index 0)) #("make-" 0 5 (ivy-index 2)) #("sly" 0 3 (ivy-index 1)) #("yasnippet-snippets" 0 18 (ivy-index 0)) #("yasni" 0 5 (ivy-index 2)) #("snipp" 0 5 (ivy-index 0))))
(setq swiper-history '(#("org" 0 3 (ivy-index 2)) #("edit" 0 4 (ivy-index 0)) #("ivy" 0 3 (ivy-index 0)) #("lsp" 0 3 (ivy-index 2)) #("tdlib" 0 5 (ivy-index 0)) #("neot" 0 4 (ivy-index 0)) #("treemacs" 0 8 (ivy-index 0)) #("show" 0 4 (ivy-index 3)) #("java" 0 4 (ivy-index 0)) #("lsp-ui" 0 6 (ivy-index 0)) "back" #("eaf" 0 3 (ivy-index 0)) #("auto" 0 4 (ivy-index 0)) #("snipp" 0 5 (ivy-index 0)) "i" #("name" 0 4 (ivy-index 3)) #("vec" 0 3 (ivy-index 0)) #("vector" 0 6 (ivy-index 57))))
(setq org-agenda-search-history '("lsp" "lsp-mode" "telega" "lsp"))
(setq counsel-M-x-history '(#("^diff" 0 5 (ivy-index 29)) #("^avy-ne" 0 7 (ivy-index 0)) #("^package-ref" 0 12 (ivy-index 0)) #("^avy-goto-line" 0 14 (ivy-index 0)) #("^eval-buffer" 0 12 (ivy-index 0)) #("^yas-insert-snippet" 0 19 (ivy-index 0)) #("^googl" 0 6 (ivy-index 0)) #("telega" 0 6 (ivy-index 134)) #("^lsp" 0 4 (ivy-index 122)) #("^projectile-" 0 12 (ivy-index 8)) #("^lsp-mode" 0 9 (ivy-index 0)) #("c-mode" 0 6 (ivy-index 8)) #("^ver" 0 4 (ivy-index 1)) #("^treemacs" 0 9 (ivy-index 89)) #("lsp" 0 3 (ivy-index 136)) #("^org-inden" 0 10 (ivy-index 5)) #("^c-mode" 0 7 (ivy-index 0)) #("^xref-find" 0 10 (ivy-index 5)) #("xref-find" 0 9 (ivy-index 0)) #("^telega" 0 7 (ivy-index 134)) #("ccls" 0 4 (ivy-index 22)) #("^ccls" 0 5 (ivy-index 16)) #("^eaf-open" 0 9 (ivy-index 7)) #("^telega-r" 0 9 (ivy-index 1)) #("^telega-se" 0 10 (ivy-index 3)) #("^treemacs-to" 0 12 (ivy-index 3)) #("^yas-new" 0 8 (ivy-index 0)) #("^customize" 0 10 (ivy-index 11)) #("^global-hl" 0 10 (ivy-index 0)) #("^global-h" 0 9 (ivy-index 3)) #("^hl" 0 3 (ivy-index 0)) #("^show" 0 5 (ivy-index 2)) #("^package-install" 0 16 (ivy-index 0)) #("lsp-java-up" 0 11 (ivy-index 0)) #("^lsp-ins" 0 8 (ivy-index 0)) #("^lsp-java-up" 0 12 (ivy-index 0)) #("^show-pa" 0 8 (ivy-index 0)) #("^counsel-rg" 0 11 (ivy-index 0)) #("^load-" 0 6 (ivy-index 1)) #("^load" 0 5 (ivy-index 1)) #("^benchmark" 0 10 (ivy-index 2)) #("^org-indent-" 0 12 (ivy-index 5)) #("^eaf-open-" 0 10 (ivy-index 4)) #("^ben" 0 4 (ivy-index 2)) #("^auto-sa" 0 8 (ivy-index 1)) #("^customize-group" 0 16 (ivy-index 1)) #("^ielm" 0 5 (ivy-index 0)) #("ivy-bai" 0 7 (ivy-index 0)) #("^xref-find-de" 0 13 (ivy-index 1)) #("yas-des" 0 7 (ivy-index 1)) #("^yas-describe-table" 0 19 (ivy-index 1)) #("^yas-des" 0 8 (ivy-index 1)) #("^lsp-ui-peek-" 0 13 (ivy-index 0))))
(setq file-name-history '(#("/home/abcdlsj/.config/.ssh/id_rsa.pub" 0 37 (ivy-index 1)) #("/home/abcdlsj/.emacs.d/core/init-edit.el" 0 40 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-packages.el" 0 44 (ivy-index 0)) #("/home/abcdlsj/.config/i3/config" 0 31 (ivy-index 0)) #("/home/abcdlsj/GithubPro/abcdlsj.github.io/content/post/leetcode-乙亥年最有趣的比赛-题解.md" 0 79 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-org.el" 0 39 (ivy-index 0)) #("/home/abcdlsj/Dropbox/workspace/C/ByteRepresentation.c" 0 54 (ivy-index 0)) #("/home/abcdlsj/Dropbox/org/journal.org" 0 37 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-ui.el" 0 38 (ivy-index 0)) #("/home/abcdlsj/Dropbox/n/ebuild.org" 0 34 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/elpa/yasnippet-snippets-20191230.1405/snippets/org-mode/entry" 0 84 (ivy-index 11)) #("/home/abcdlsj/.emacs.d/elpa/yasnippet-snippets-20191230.1405/snippets/org-mode/matrix" 0 85 (ivy-index 23)) #("/home/abcdlsj/.emacs.d/elpa/yasnippet-snippets-20191230.1405/snippets/org-mode/center" 0 85 (ivy-index 3)) #("/home/abcdlsj/.emacs.d/elpa/yasnippet-snippets-20191230.1405/snippets/org-mode/image" 0 84 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/elpa/yasnippet-snippets-20191230.1405/snippets/org-mode/link" 0 83 (ivy-index 0)) #("/home/abcdlsj/Dropbox/n/linux文件夹权限设置.org" 0 40 (ivy-index 2)) #("/home/abcdlsj/Dropbox/n/Arch安装配置双显卡.org" 0 39 (ivy-index 7)) #("/home/abcdlsj/Dropbox/workspace/CPP/quine_string.cpp" 0 52 (ivy-index 1)) #("/home/abcdlsj/.emacs.d/core/init-lsp.el" 0 39 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/.lsp-session-v1" 0 38 (ivy-index 0)) #("/home/abcdlsj/Dropbox/workspace/C/quine_string.c" 0 48 (ivy-index 3)) #("/home/abcdlsj/GithubPro/wis/wis.c" 0 33 (ivy-index 7)) #("/home/abcdlsj/.emacs.d/core/init-cc.el" 0 38 (ivy-index 0)) #("/home/abcdlsj/Dropbox/workspace/C/pi.c" 0 38 (ivy-index 6)) #("/home/abcdlsj/Dropbox/workspace/C/banks.c" 0 41 (ivy-index 3)) #("/home/abcdlsj/GithubPro/ccls-test/a.cc" 0 38 (ivy-index 4)) #("/home/abcdlsj/.emacs.d/core/init-awesome.el" 0 43 (ivy-index 0)) #("/home/abcdlsj/Documents/Dasgupta-Papadimitriou-Vazirani.pdf" 0 59 (ivy-index 2)) #("/home/abcdlsj/.emacs.d/elpa/telega-20200112.1940/" 0 49 (ivy-index 0)) #("/home/abcdlsj/Dropbox/workspace/CPP/quine.cpp" 0 45 (ivy-index 0)) #("/home/abcdlsj/Dropbox/workspace/C/quine.c" 0 41 (ivy-index 1)) #("/home/abcdlsj/.emacs.d/core/init-keybindings.el" 0 47 (ivy-index 0)) #("/home/abcdlsj/" 0 14 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-ivy.el" 0 39 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/.#init-custom.el" 0 44 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/init.el" 0 30 (ivy-index 1)) #("/home/abcdlsj/.emacs.d/core/init-custom.el" 0 42 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/snippets/org-mode/java" 0 45 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/snippets/org-mode/hugo" 0 45 (ivy-index 2)) #("/home/abcdlsj/Dropbox/org/blog.org" 0 34 (ivy-index 0)) #("/home/abcdlsj/Dropbox/workspace/Java/HelloWorld.java" 0 52 (ivy-index 1)) #("/home/abcdlsj/.emacs.d/core/init-company.el" 0 43 (ivy-index 0)) #("/home/abcdlsj/Dropbox/workspace/alg/OJ/leetcode/set2vec.cpp" 0 59 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/snippets/c++-mode/vector" 0 47 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/elpa/yasnippet-snippets-20191230.1405/snippets/c++-mode/vector" 0 85 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/early-init.el" 0 36 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-funcs.el" 0 41 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-const.el" 0 41 (ivy-index 0)) #("/home/abcdlsj/doom.d/modules/completion/ivy/config.el" 0 53 (ivy-index 4)) #("/home/abcdlsj/.emacs.d/core/init-lisp.el" 0 40 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/.#init-edit.el" 0 42 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/core/init-optimize.el" 0 44 (ivy-index 0)) #("/home/abcdlsj/Dropbox/org/notes.org" 0 35 (ivy-index 5)) "/home/abcdlsj/calibre-lib/metadata.db" #("/home/abcdlsj/.emacs.d/core/init-snippet.el" 0 43 (ivy-index 15)) #("/home/abcdlsj/Dropbox/n/.#auto-save.org" 0 39 (ivy-index 5)) #("/home/abcdlsj/C/Users/abcdlsj/.emacs" 0 36 (ivy-index 1)) #("/home/abcdlsj/Dropbox/workspace/alg/OJ/hdu/AB3.cpp" 0 50 (ivy-index 0)) #("/home/abcdlsj/Dropbox/workspace/alg/OJ/hdu/AB2.cpp" 0 50 (ivy-index 0)) #("/home/abcdlsj/Dropbox/n/OJ_Notes.org" 0 36 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/elpa/yasnippet-snippets-20191230.1405/snippets/c++-mode/template" 0 87 (ivy-index 0)) #("/home/abcdlsj/Dropbox/workspace/alg/OJ/hdu/AB1.cpp" 0 50 (ivy-index 0)) #("/home/abcdlsj/Dropbox/workspace/alg/" 0 36 (ivy-index 0)) #("/home/abcdlsj/.emacs.d/elpa/yasnippet-snippets-20191230.1405/snippets/c-lang-common/main" 0 88 (ivy-index 0)) #("/home/abcdlsj/Dropbox/workspace/alg/OJ/uva/5/uva_101.cpp" 0 56 (ivy-index 1)) "~/.emacs.d/core/init-lsp.el" "~/Dropbox/org/task.org" "~/Dropbox/org/notes.org" "~/Dropbox/org/journal.org" "~/Dropbox/org/dailytask.org" "~/Dropbox/org/blog.org" "~/GithubPro/wis/wis.c"))
(setq ivy-history '(#("pack" 0 4 (ivy-index 0)) #("blo" 0 3 (ivy-index 0)) #("init-" 0 5 (ivy-index 0)) #("blog" 0 4 (ivy-index 0)) #("sc" 0 2 (ivy-index 0)) #("bl" 0 2 (ivy-index 0)) #("^j" 0 2 (ivy-index 0)) #("org" 0 3 (ivy-index 5)) #("^t" 0 2 (ivy-index 0)) #("link" 0 4 (ivy-index 0)) #("qu" 0 2 (ivy-index 0)) #("lsp" 0 3 (ivy-index 0)) #(".c" 0 2 (ivy-index 0)) #("quine" 0 5 (ivy-index 1)) #("cpp" 0 3 (ivy-index 0)) #("c" 0 1 (ivy-index 8)) #("edi" 0 3 (ivy-index 0)) #("init-edit.el" 0 12 (ivy-index 0)) #("org.el" 0 6 (ivy-index 0)) #("ar" 0 2 (ivy-index 0)) #("lisp" 0 4 (ivy-index 1)) #("jav" 0 3 (ivy-index 0)) #("^h" 0 2 (ivy-index 0)) #("53" 0 2 (ivy-index 0)) #("init" 0 4 (ivy-index 0)) #("init-or" 0 7 (ivy-index 0)) #("^p" 0 2 (ivy-index 0)) #("note" 0 4 (ivy-index 0)) #("970" 0 3 (ivy-index 0)) #("ini" 0 3 (ivy-index 1)) #("vec" 0 3 (ivy-index 0)) #("cop" 0 3 (ivy-index 1)) #("cus" 0 3 (ivy-index 0)) #("init.el" 0 7 (ivy-index 0)) #("task" 0 4 (ivy-index 0)) #("ui" 0 2 (ivy-index 0)) #("tao" 0 3 (ivy-index 2)) #("opti" 0 4 (ivy-index 0)) #("auto-" 0 5 (ivy-index 2)) #("nil" 0 3 (ivy-index 0)) #("typename" 0 8 (ivy-index 0)) #("std" 0 3 (ivy-index 1)) #("uva/5/uva_101.cpp" 0 17 (ivy-index 0)) #("uva" 0 3 (ivy-index 0)) #("str" 0 3 (ivy-index 0)) #("cs" 0 2 (ivy-index 0)) #("init-lsp.el" 0 11 (ivy-index 0))))
(setq evil-ex-history '(#("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 13257) 1 2 (ex-index 13258)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("WW" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1))))
(setq evil-jumps-history '((428 "/home/abcdlsj/.emacs.d/core/init-packages.el") (1 "/home/abcdlsj/.emacs.d/core/init-packages.el") (2026 "/home/abcdlsj/.emacs.d/core/init-edit.el") (1986 "/home/abcdlsj/.emacs.d/core/init-edit.el") (1909 "/home/abcdlsj/.emacs.d/core/init-edit.el") (1750 "/home/abcdlsj/.emacs.d/core/init-edit.el") (783 "/home/abcdlsj/.emacs.d/core/init-edit.el") (552 "/home/abcdlsj/.emacs.d/core/init-edit.el") (765 "/home/abcdlsj/.emacs.d/core/init-packages.el") (1 "/home/abcdlsj/.emacs.d/core/init-packages.el") (1148 "/home/abcdlsj/.config/i3/config") (1 "/home/abcdlsj/.config/i3/config") (2934 "/home/abcdlsj/Dropbox/org/blog.org") (155 "/home/abcdlsj/Dropbox/org/blog.org") (7363 "/home/abcdlsj/Dropbox/org/blog.org") (7384 "/home/abcdlsj/Dropbox/org/blog.org") (7428 "/home/abcdlsj/Dropbox/org/blog.org") (1098 "/home/abcdlsj/Dropbox/org/blog.org") (2934 "/home/abcdlsj/Dropbox/org/blog.org") (7242 "/home/abcdlsj/Dropbox/org/blog.org") (7468 "/home/abcdlsj/Dropbox/org/blog.org") (2934 "/home/abcdlsj/Dropbox/org/blog.org") (7468 "/home/abcdlsj/Dropbox/org/blog.org") (6009 "/home/abcdlsj/Dropbox/org/blog.org") (2934 "/home/abcdlsj/Dropbox/org/blog.org") (6009 "/home/abcdlsj/Dropbox/org/blog.org") (3156 "/home/abcdlsj/Dropbox/org/blog.org") (5584 "/home/abcdlsj/Dropbox/org/blog.org") (7464 "/home/abcdlsj/Dropbox/org/blog.org") (2934 "/home/abcdlsj/Dropbox/org/blog.org") (7464 "/home/abcdlsj/Dropbox/org/blog.org") (1 "/home/abcdlsj/Dropbox/org/blog.org") (681 "/home/abcdlsj/.emacs.d/core/init-org.el") (9985 "/home/abcdlsj/Dropbox/org/journal.org") (771 "/home/abcdlsj/.emacs.d/core/init-ui.el") (3251 "/home/abcdlsj/Dropbox/org/blog.org") (2934 "/home/abcdlsj/Dropbox/org/blog.org") (2937 "/home/abcdlsj/Dropbox/org/blog.org") (2934 "/home/abcdlsj/Dropbox/org/blog.org") (2937 "/home/abcdlsj/Dropbox/org/blog.org") (1321 "/home/abcdlsj/.emacs.d/core/init-org.el") (4975 "/home/abcdlsj/Dropbox/org/blog.org") (4770 "/home/abcdlsj/Dropbox/org/blog.org") (4752 "/home/abcdlsj/Dropbox/org/blog.org") (4622 "/home/abcdlsj/Dropbox/org/blog.org") (4770 "/home/abcdlsj/Dropbox/org/blog.org") (4496 "/home/abcdlsj/Dropbox/org/blog.org") (3432 "/home/abcdlsj/Dropbox/org/blog.org") (4255 "/home/abcdlsj/Dropbox/org/blog.org") (4181 "/home/abcdlsj/Dropbox/org/blog.org") (4181 "/home/abcdlsj/Dropbox/org/blog.org") (2934 "/home/abcdlsj/Dropbox/org/blog.org") (3220 "/home/abcdlsj/Dropbox/org/blog.org") (478 "/home/abcdlsj/Dropbox/n/Arch安装配置双显卡.org") (2602 "/home/abcdlsj/.emacs.d/core/init-lsp.el") (2581 "/home/abcdlsj/.emacs.d/core/init-lsp.el") (1779 "/home/abcdlsj/.emacs.d/core/init-lsp.el") (1601 "/home/abcdlsj/.emacs.d/core/init-lsp.el") (1600 "/home/abcdlsj/.emacs.d/core/init-lsp.el") (1433 "/home/abcdlsj/.emacs.d/core/init-lsp.el") (958 "/home/abcdlsj/.emacs.d/core/init-lsp.el") (506 "/home/abcdlsj/.emacs.d/core/init-lsp.el") (1 "/home/abcdlsj/Dropbox/workspace/C/quine_string.c") (1 "/home/abcdlsj/Dropbox/workspace/C/quine_string.c") (1 "/home/abcdlsj/Dropbox/workspace/C/quine_string.c") (864 "/home/abcdlsj/.emacs.d/core/init-ui.el")))
(setq mark-ring 'nil)
(setq search-ring 'nil)
(setq regexp-search-ring '("org" "edit" "ivy" #("chrome" 0 6 (isearch-case-fold-search t)) #("float" 0 5 (isearch-case-fold-search t)) "lsp" "tdlib" "neot" "treemacs" "show" "java" "lsp" "/" "lsp-ui" "eaf" "auto"))
(setq extended-command-history 'nil)
